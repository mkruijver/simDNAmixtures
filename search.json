[{"path":"https://mkruijver.github.io/simDNAmixtures/articles/getting_started.html","id":"basic-log-normal-example","dir":"Articles","previous_headings":"","what":"Basic log normal example","title":"Getting started","text":", load allele frequencies provided package demonstrate mixtures can sampled using log normal model peak heights (refer (Taylor, Bright, Buckleton 2013) details model). template parameters contributor picked uniformly 50 10,000. degradation parameter picked gamma distribution shape 2.5 scale 0.001. setup, single function call sufficient generate set samples. set n=2 generate two samples. contributors sample named U1 U2 means mixed sample two unrelated contributors. mixtures object contains simulation results. sample_mixtures function optional results_directory argument. path directory provided, simulation results persisted disk file formats readily imported probabilistic genotyping software. inspect parameter_summary property result sample_mixtures. first sample approximately 2:1 ratio. print first 10 peaks profile .","code":"freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                                        package = \"simDNAmixtures\")) gf <- gf_configuration()  sampling_parameters <- list(min_template = 50., max_template = 10000.,                             degradation_shape = 2.5, degradation_scale = 1e-3) set.seed(1) mixtures <- sample_mixtures(n = 2, contributors = c(\"U1\", \"U2\"), freqs = freqs,                             sampling_parameters = sampling_parameters,                             model_settings = gf$log_normal_bwfw_settings,                             sample_model = sample_log_normal_model) knitr::kable(mixtures$parameter_summary[1:5]) knitr::kable(head(mixtures$samples[[1]]$mixture, 10))"},{"path":"https://mkruijver.github.io/simDNAmixtures/articles/getting_started.html","id":"basic-gamma-example","dir":"Articles","previous_headings":"","what":"Basic gamma example","title":"Getting started","text":"repeat example gamma distribution peak heights instead log normal one. mean peak height parameter mu chosen uniformly 50 5,000. variance parameter cv parameter (σ\\sigma (Bleka, Storvik, Gill 2016)) chosen uniformly 0.05 0.35. degradation parameter sampled Beta distribution parameters 10 1, means profile mildly degraded. now invoke sample_mixtures function sample two mixtures; consisting two unrelated contributors. sample stutters. see first sample μ\\mu around 1,236 65:35 ratio. coefficient variation full heterozygote 9% first sample. print first 10 peaks profile .","code":"gamma_sampling_parameters <- list(min_mu = 50., max_mu = 5e3,                             min_cv = 0.05, max_cv = 0.35,                             degradation_shape1 = 10, degradation_shape2 = 1) set.seed(2) mixtures <- sample_mixtures(n = 2, contributors = c(\"U1\", \"U2\"), freqs = freqs,                             sampling_parameters = gamma_sampling_parameters,                             model_settings = gf$gamma_settings_no_stutter,                             sample_model = sample_gamma_model) knitr::kable(mixtures$parameter_summary[1:4]) knitr::kable(mixtures$parameter_summary[c(1,5:7)]) knitr::kable(head(mixtures$samples[[1]]$mixture, 10))"},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/articles/simulating_YSTR_profiles.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Simulating YSTR profiles","text":"start reading YSTR kit stutter data. input two genotypes","code":"require(simDNAmixtures) #> Loading required package: simDNAmixtures   data_dir <- system.file(\"extdata\", package = \"simDNAmixtures\")   kit_filename <- file.path(data_dir, \"YFiler_Plus_3500_FSSA.xml\")   YSTR_kit <- read_STRmix_kit_settings(kit_filename, data_dir, include_y_loci = TRUE) y_refs_with_names <- as.data.frame(readxl::read_excel(path = system.file(\"extdata\",\"South_Australia_YSTRs.xlsx\",                                                                          package = \"simDNAmixtures\"),                                                        col_types = rep(\"text\", 27)))  x <- y_refs_with_names[1:2, -c(1, 2)] rownames(x) <- c(\"K1\", \"K2\") genotypes <- simDNAmixtures:::.wide_YSTR_references_to_allele_tables(x)"},{"path":"https://mkruijver.github.io/simDNAmixtures/articles/simulating_YSTR_profiles.html","id":"simulation","dir":"Articles","previous_headings":"","what":"Simulation","title":"Simulating YSTR profiles","text":"","code":"sampling_parameters <- list(min_template = 250., max_template = 5000.,                             degradation_shape = 2.5, degradation_scale = 5e-4)  mixtures <- sample_mixtures_from_genotypes(n = 10, genotypes = genotypes, sampling_parameters = sampling_parameters,                                 model_settings = YSTR_kit, sample_model = sample_log_normal_model,                                 number_of_replicates = 3, tag = \"YSTR 2P\") length(mixtures) #> [1] 4 # add results_directory=\"...\" to save results to disk"},{"path":"https://mkruijver.github.io/simDNAmixtures/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maarten Kruijver. Author, maintainer.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kruijver M (2025). simDNAmixtures: Simulate Forensic DNA Mixtures. R package version 1.1.3, https://mkruijver.github.io/simDNAmixtures/.","code":"@Manual{,   title = {simDNAmixtures: Simulate Forensic DNA Mixtures},   author = {Maarten Kruijver},   year = {2025},   note = {R package version 1.1.3},   url = {https://mkruijver.github.io/simDNAmixtures/}, }"},{"path":"https://mkruijver.github.io/simDNAmixtures/index.html","id":"simdnamixtures","dir":"","previous_headings":"","what":"Simulate Forensic DNA Mixtures","title":"Simulate Forensic DNA Mixtures","text":"goal simDNAmixtures provide easy use workflow simulating single source mixed forensic DNA profiles. simulations used research validation related probabilistic genotyping systems also studies relationship testing. simDNAmixtures package supports simulation : Autosomal STR profiles (e.g. GlobalFiler™) Autosomal SNP profiles (e.g. Kintelligence FORCE) YSTR profiles (e.g. Yfiler™ Plus) Genotypes sample contributors may provided inputs. autosomal profiles (STRs SNPs) also possible sample genotypes according allele frequencies pedigree.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulate Forensic DNA Mixtures","text":"install simDNAmixtures CRAN: Alternatively, can install development version simDNAmixtures GitHub :","code":"install.packages(\"simDNAmixtures\") # install.packages(\"devtools\") devtools::install_github(\"mkruijver/simDNAmixtures\")"},{"path":"https://mkruijver.github.io/simDNAmixtures/index.html","id":"example-globalfiler-mixture-of-two-siblings","dir":"","previous_headings":"","what":"Example (GlobalFiler™ mixture of two siblings)","title":"Simulate Forensic DNA Mixtures","text":"example demonstrates mixed STR profile comprising two siblings can simulated. comprehensive examples set simulation study can found vignettes. first step define pedigree two siblings parents using pedtools package.  , load provided data including allele frequencies data related GlobalFiler™ kit locus names, size regression stutter model. now ready sample mixed STR profile. gamma model used μ\\mu sampled uniformly 50 5000 rfu coefficient variation 5 35%. simulation results stored mixtures object. Note results_directory argument sample_mixtures function may used automatically write results disk. print simulated mixture data stored mixtures$samples[[1]]$mixture. genotypes two contributors available mixtures$samples[[1]]$contributor_genotypes.","code":"library(simDNAmixtures) library(pedtools)  ped_fs <- nuclearPed(children = c(\"S1\", \"S2\")) plot(ped_fs) # load allele frequencies freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                            package = \"simDNAmixtures\"))  # load kit data gf <- gf_configuration() set.seed(1)  sampling_parameters <- list(min_mu = 50., max_mu = 5e3,                            min_cv = 0.05, max_cv = 0.35,                            degradation_shape1 = 0, degradation_shape2 = 0)  mixtures <- sample_mixtures(n = 1, contributors = c(\"S1\", \"S2\"),                              pedigree = ped_fs, freqs = freqs,                             sampling_parameters = sampling_parameters,                             model_settings = gf$gamma_settings,                             sample_model = sample_gamma_model)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/SMASH_to_wide_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts SMASH (SampleName, Marker, Allele, Size, Height) data to a wide table — SMASH_to_wide_table","title":"Converts SMASH (SampleName, Marker, Allele, Size, Height) data to a wide table — SMASH_to_wide_table","text":"Converts SMASH (SampleName, Marker, Allele, Size, Height) data wide table","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/SMASH_to_wide_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts SMASH (SampleName, Marker, Allele, Size, Height) data to a wide table — SMASH_to_wide_table","text":"","code":"SMASH_to_wide_table(x)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/SMASH_to_wide_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts SMASH (SampleName, Marker, Allele, Size, Height) data to a wide table — SMASH_to_wide_table","text":"x DataFrame SampleName, Marker, Allele, Size, Height columns","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/SMASH_to_wide_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts SMASH (SampleName, Marker, Allele, Size, Height) data to a wide table — SMASH_to_wide_table","text":"DataFrame columns: Sample Name, Marker, Allele 1, Allele 2, ..., Size 1, Size 2, ..., Height 1, Height 2, ...","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/SMASH_to_wide_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts SMASH (SampleName, Marker, Allele, Size, Height) data to a wide table — SMASH_to_wide_table","text":"","code":"# generate example data in SMASH form freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\", package = \"simDNAmixtures\")) gf <- gf_configuration()  sampling_parameters <- list(min_mu = 50., max_mu = 5e3,                             min_cv = 0.05, max_cv = 0.35,                             degradation_shape1 = 10, degradation_shape2 = 1)  mixtures <- sample_mixtures(n = 2, contributors = c(\"U1\"), freqs = freqs,                             sampling_parameters = sampling_parameters,                             model_settings = gf$gamma_settings_no_stutter,                             sample_model = sample_gamma_model)  # convert from SMASH to wide table wide_table <- SMASH_to_wide_table(mixtures$smash)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/allele_specific_stutter_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Stutter model where the expected stutter rate depends on the allele and locus — allele_specific_stutter_model","title":"Stutter model where the expected stutter rate depends on the allele and locus — allele_specific_stutter_model","text":"Stutter model expected stutter rate depends allele locus","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/allele_specific_stutter_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stutter model where the expected stutter rate depends on the allele and locus — allele_specific_stutter_model","text":"","code":"allele_specific_stutter_model(   stutter_types,   size_regression,   sex_locus_name = \"AMEL\" )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/allele_specific_stutter_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stutter model where the expected stutter rate depends on the allele and locus — allele_specific_stutter_model","text":"stutter_types List. See stutter_type. size_regression Function, see read_size_regression. sex_locus_name Character vector, defaults \"AMEL\".","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/allele_specific_stutter_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stutter model where the expected stutter rate depends on the allele and locus — allele_specific_stutter_model","text":"Object class stutter_model used e.g. log_normal_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/allele_specific_stutter_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stutter model where the expected stutter rate depends on the allele and locus — allele_specific_stutter_model","text":"pg_model constructed (see gamma_model), stutter model can optionally applied. allele specific stutter model commonly used log normal model. expected stutter ratio parent allele locus obtained linear regression observed stutter ratios allele length. loci alleles linear model may satisfactory. override expected stutter rates specific alleles, list exceptions can used. See stutter_type detail.","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/allele_specific_stutter_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stutter model where the expected stutter rate depends on the allele and locus — allele_specific_stutter_model","text":"","code":"# we will define an allele specific stutter model for back stutter only  # prepare stutter regression filename_bs_regression <- system.file(\"extdata\", \"GlobalFiler_Stutter_3500.txt\",package = \"simDNAmixtures\") bs_regression <- read_stutter_regression(filename_bs_regression)  # prepare exceptions, i.e. where does the regression not apply? filename_bs_exceptions <- system.file(\"extdata\", \"GlobalFiler_Stutter_Exceptions_3500.csv\",package = \"simDNAmixtures\") bs_exceptions <- read_stutter_exceptions(filename_bs_exceptions)  # prepare a stutter type backstutter <- stutter_type(name = \"BackStutter\", delta = -1,                             stutter_regression = bs_regression,                             stutter_exceptions = bs_exceptions)  # assign stutter model size_regression <- read_size_regression(system.file(\"extdata\", \"GlobalFiler_SizeRegression.csv\",package = \"simDNAmixtures\")) bs_model <- allele_specific_stutter_model(list(backstutter), size_regression) bs_model #> $stutter_types #> $stutter_types[[1]] #> $name #> [1] \"BackStutter\" #>  #> $delta #> [1] -1 #>  #> $applies_to_all_loci #> [1] TRUE #>  #> $regression #> function (locus, allele)  #> { #>     regression_locus <- regression_df_by_locus[[locus]] #>     if (is.null(regression_locus)) { #>         stop(\"No stutter regression available for locus \", locus) #>     } #>     intercept <- regression_locus$Intercept #>     slope <- regression_locus$Slope #>     max(min_stutter_ratio, intercept + slope * as.numeric(allele)) #> } #> <bytecode: 0x5612a08a8d30> #> <environment: 0x5612a122f8c0> #>  #> $exceptions #> $exceptions$D8S1179 #>       8      10      11      12      13      14      15      16      18  #> 0.03152 0.04864 0.05584 0.06524 0.05913 0.06564 0.07019 0.07451 0.08698  #>  #> $exceptions$D21S11 #>      27      28      29      30    30.2      31    31.2      32    32.2    33.2  #> 0.04241 0.05957 0.05909 0.07504 0.05746 0.07995 0.06253 0.08734 0.07836 0.08319  #>  #> $exceptions$D2S441 #>      10      11      12      13      14      15      16  #> 0.03342 0.05468 0.06129 0.04058 0.03950 0.04500 0.05982  #>  #> $exceptions$D19S433 #>     6.2       8       9      10      11    11.1    11.2      12    12.1    12.2  #> 0.00005 0.00876 0.00876 0.02618 0.03489 0.02618 0.04360 0.04360 0.00005 0.05231  #>      13    13.2      14    14.2      15    15.2      16    16.2      17    17.2  #> 0.05231 0.06102 0.06102 0.06973 0.06973 0.07844 0.07844 0.08715 0.08715 0.09151  #>      18    18.2    19.2  #> 0.09586 0.10457 0.11328  #>  #> $exceptions$TH01 #>       4       5       6       7       8     8.3       9     9.3      10    10.3  #> 0.00223 0.00799 0.01375 0.01951 0.02527 0.00799 0.03103 0.01375 0.03679 0.01375  #>      11      12    13.3  #> 0.04255 0.04831 0.02527  #>  #> $exceptions$SE33 #>      13      14      15      16      17      18      19      20      21    22.2  #> 0.05466 0.05775 0.06570 0.07151 0.07849 0.08581 0.08929 0.09947 0.10593 0.06981  #>    23.2    24.2    25.2    26.2    27.2    28.2    29.2    30.2    31.2    32.2  #> 0.06975 0.08019 0.08294 0.08884 0.09311 0.09721 0.10606 0.11024 0.11982 0.11991  #>  #> $exceptions$D1S1656 #>       8       9      10      11      12      13    13.3      14    14.3      15  #> 0.02644 0.03559 0.04017 0.05389 0.05847 0.06304 0.05389 0.07677 0.03559 0.08134  #>    15.3      16    16.3      17    17.3      18    18.3    19.3  #> 0.04932 0.09351 0.05389 0.09964 0.06304 0.10879 0.07219 0.08134  #>  #> $exceptions$D2S1338 #>      16      17      18      19      20      21      22      23      24      25  #> 0.04892 0.05731 0.06614 0.06862 0.07423 0.08291 0.06979 0.07556 0.08495 0.09530  #>      26  #> 0.10131  #>  #>  #> $get_expected_stutter_ratio #> function (locus, allele)  #> { #>     exception <- NULL #>     if (!is.null(stutter$exceptions[[locus]])) { #>         if (as.character(allele) %in% names(stutter$exceptions[[locus]])) { #>             exception <- stutter$exceptions[[locus]][[as.character(allele)]] #>         } #>     } #>     if (isTRUE(exception > 0)) { #>         return(exception) #>     } #>     else { #>         return(stutter$regression(locus, allele)) #>     } #> } #> <bytecode: 0x5612a034dec0> #> <environment: 0x5612a0ba5de8> #>  #> attr(,\"class\") #> [1] \"stutter_type\" #>  #>  #> $size_regression #> function (locus, allele)  #> { #>     if (has_exceptions) { #>         locus_exceptions <- exceptions[[locus]] #>         if (!is.null(locus_exceptions)) { #>             if (allele %in% names(locus_exceptions)) { #>                 size <- locus_exceptions[[allele]] #>                 return(size) #>             } #>         } #>     } #>     regression_locus <- regression_df_by_locus[[locus]] #>     if (is.null(regression_locus)) { #>         stop(\"No size regression available for locus \", locus) #>     } #>     intercept <- regression_locus$Intercept #>     slope <- regression_locus$Slope #>     allele_numeric <- as.numeric(allele) #>     if (has_repeat_length_by_marker) { #>         repeat_length <- repeat_length_by_marker[[locus]] #>         if (!is.null(repeat_length)) { #>             allele_numeric <- repeats_to_decimals(allele_numeric,  #>                 repeat_length) #>         } #>     } #>     intercept + slope * allele_numeric #> } #> <bytecode: 0x5612a0cdb8a0> #> <environment: 0x5612a0ac8698> #>  #> $sex_locus_name #> [1] \"AMEL\" #>  #> $add_expected_stutter #> function (...)  #> allele_specific_stutter_model_add_expected_stutter(stutter_model,  #>     ...) #> <bytecode: 0x5612a39dbaa8> #> <environment: 0x5612a0666a30> #>  #> attr(,\"class\") #> [1] \"stutter_model\""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/dot-validate_freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Allele Frequencies — .validate_freqs","title":"Validate Allele Frequencies — .validate_freqs","text":"internal function check format contents frequency list.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/dot-validate_freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Allele Frequencies — .validate_freqs","text":"","code":".validate_freqs(freqs, required_loci = NULL)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/dot-validate_freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Allele Frequencies — .validate_freqs","text":"freqs List allele frequencies. required_loci Character vector required loci names.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/dot-validate_pedigree.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Pedigree Object — .validate_pedigree","title":"Validate Pedigree Object — .validate_pedigree","text":"internal function checks input object class ped. , stops execution error message. Additionally, can check forbidden names pedigree IDs specified.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/dot-validate_pedigree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Pedigree Object — .validate_pedigree","text":"","code":".validate_pedigree(pedigree, disallow_U_names = FALSE)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/dot-validate_pedigree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Pedigree Object — .validate_pedigree","text":"pedigree object expected class ped. disallow_U_names logical flag indicating whether disallow IDs starting \"U\" followed digit (e.g., \"U1\", \"U2\", ..., \"U10\") pedigree. Default FALSE.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/dot-validate_pedigree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate Pedigree Object — .validate_pedigree","text":"function return value. stops execution input class ped forbidden names found disallow_U_names TRUE.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/dot-validate_pedigree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate Pedigree Object — .validate_pedigree","text":"","code":"if (FALSE) { # \\dontrun{   pedigree <- create_ped() # Assuming create_ped() returns an object of class 'ped'   .validate_pedigree(pedigree)   .validate_pedigree(pedigree, disallow_U_names = TRUE) } # }"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/drop_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines a (semi-continuous) drop model — drop_model","title":"Defines a (semi-continuous) drop model — drop_model","text":"Defines (semi-continuous) drop model","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/drop_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines a (semi-continuous) drop model — drop_model","text":"","code":"drop_model(dropout_probabilities, drop_in_rate = 0, freqs, model_settings)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/drop_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines a (semi-continuous) drop model — drop_model","text":"dropout_probabilities Numeric vector values 0 1. Dropout probabilities contributor. drop_in_rate Numeric vector length one. Expected number drop-ins per locus. Default 0. freqs Optionally list allele frequencies (needed drop_in_rate > 0). See read_allele_freqs. model_settings List. Possible parameters: locus_names. Character vector. size_regression. Function, see read_size_regression.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/drop_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines a (semi-continuous) drop model — drop_model","text":"Object class pg_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/drop_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defines a (semi-continuous) drop model — drop_model","text":"Define classes semi-continuous drop-model. model may used sample DNA profiles using sample_mixture_from_genotypes function. Alternatively, sample many models profiles one go parameters according specified distribution, sample_mixtures function can used.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/drop_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Defines a (semi-continuous) drop model — drop_model","text":"Slooten, K. (2017). Accurate assessment weight evidence DNA mixtures integrating likelihood ratio. Forensic Science International: Genetics, 27, 1-16. doi:10.1016/j.fsigen.2016.11.001","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/drop_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defines a (semi-continuous) drop model — drop_model","text":"","code":"gf <- gf_configuration() freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                                        package = \"simDNAmixtures\")) settings <- list(locus_names = gf$autosomal_markers, size_regression = gf$size_regression)  model <- drop_model(dropout_probabilities = c(0.1),                     drop_in_rate = 1e-3,                     freqs = freqs, model_settings = settings)  g <- sample_contributor_genotypes(contributors = \"U1\", freqs = freqs,                                   loci = settings$locus_names)  # genotype g #> $U1 #>    Sample Name    Locus Allele1 Allele2 #> 1           U1  D3S1358      15      15 #> 2           U1      vWA      15      16 #> 3           U1  D16S539       9       9 #> 4           U1   CSF1PO      10      12 #> 5           U1     TPOX       8       9 #> 6           U1  D8S1179      11      14 #> 7           U1   D21S11      29    31.2 #> 8           U1   D18S51      13      15 #> 9           U1   D2S441      11      14 #> 10          U1  D19S433      12    15.2 #> 11          U1     TH01       6     9.3 #> 12          U1      FGA      23      24 #> 13          U1 D22S1045      11      15 #> 14          U1   D5S818      11      11 #> 15          U1  D13S317       8      12 #> 16          U1   D7S820       8       8 #> 17          U1     SE33    23.2    30.2 #> 18          U1 D10S1248      12      14 #> 19          U1  D1S1656      15    15.3 #> 20          U1  D12S391      19      22 #> 21          U1  D2S1338      20      23 #>   # sample with dropout sample_mixture_from_genotypes(g, model) #>    SampleName   Marker Allele   Size Height n1 x1 n x #> 1     mixture  D3S1358     15 121.40   1000  2  2 2 2 #> 2     mixture      vWA     15 172.87   1000  1  1 1 1 #> 3     mixture      vWA     16 176.91   1000  1  1 1 1 #> 4     mixture  D16S539      9 243.61   1000  2  2 2 2 #> 5     mixture   CSF1PO     10 298.34   1000  1  1 1 1 #> 6     mixture   CSF1PO     12 306.26   1000  1  1 1 1 #> 7     mixture     TPOX      8 349.70   1000  1  1 1 1 #> 8     mixture     TPOX      9 353.72   1000  1  1 1 1 #> 9     mixture  D8S1179     11 139.06   1000  1  1 1 1 #> 10    mixture  D8S1179     14 151.36   1000  1  1 1 1 #> 11    mixture   D21S11     29 203.65   1000  1  1 1 1 #> 12    mixture   D21S11   31.2 212.54   1000  1  1 1 1 #> 13    mixture   D18S51     13 285.67   1000  1  1 1 1 #> 14    mixture   D18S51     15 293.75   1000  1  1 1 1 #> 15    mixture   D2S441     11  89.42      0  1  0 1 0 #> 16    mixture   D2S441     14 101.60   1000  1  1 1 1 #> 17    mixture  D19S433     12 141.77   1000  1  1 1 1 #> 18    mixture  D19S433   15.2 154.52   1000  1  1 1 1 #> 19    mixture     TH01      6 186.89   1000  1  1 1 1 #> 20    mixture     TH01    9.3 200.62   1000  1  1 1 1 #> 21    mixture      FGA     23 264.08      0  1  0 1 0 #> 22    mixture      FGA     24 268.15   1000  1  1 1 1 #> 23    mixture D22S1045     11  97.51   1000  1  1 1 1 #> 24    mixture D22S1045     15 109.46   1000  1  1 1 1 #> 25    mixture   D5S818     11 154.87   1000  2  2 2 2 #> 26    mixture  D13S317      8 210.84      0  1  0 1 0 #> 27    mixture  D13S317     12 227.02   1000  1  1 1 1 #> 28    mixture   D7S820      8 270.42   1000  2  1 2 1 #> 29    mixture     SE33   23.2 383.92   1000  1  1 1 1 #> 30    mixture     SE33   30.2 412.39   1000  1  1 1 1 #> 31    mixture D10S1248     12 101.53   1000  1  1 1 1 #> 32    mixture D10S1248     14 109.53   1000  1  1 1 1 #> 33    mixture  D1S1656     15 184.88   1000  1  1 1 1 #> 34    mixture  D1S1656   15.3 186.15   1000  1  1 1 1 #> 35    mixture  D12S391     19 236.04   1000  1  1 1 1 #> 36    mixture  D12S391     22 247.96   1000  1  1 1 1 #> 37    mixture  D2S1338     20 316.84   1000  1  1 1 1 #> 38    mixture  D2S1338     23 328.89      0  1  0 1 0 #>    HeightAtOrAboveDetectionThreshold #> 1                               TRUE #> 2                               TRUE #> 3                               TRUE #> 4                               TRUE #> 5                               TRUE #> 6                               TRUE #> 7                               TRUE #> 8                               TRUE #> 9                               TRUE #> 10                              TRUE #> 11                              TRUE #> 12                              TRUE #> 13                              TRUE #> 14                              TRUE #> 15                             FALSE #> 16                              TRUE #> 17                              TRUE #> 18                              TRUE #> 19                              TRUE #> 20                              TRUE #> 21                             FALSE #> 22                              TRUE #> 23                              TRUE #> 24                              TRUE #> 25                              TRUE #> 26                             FALSE #> 27                              TRUE #> 28                              TRUE #> 29                              TRUE #> 30                              TRUE #> 31                              TRUE #> 32                              TRUE #> 33                              TRUE #> 34                              TRUE #> 35                              TRUE #> 36                              TRUE #> 37                              TRUE #> 38                             FALSE"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gamma_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines a gamma model for peak height variability — gamma_model","title":"Defines a gamma model for peak height variability — gamma_model","text":"Defines gamma model peak height variability","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gamma_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines a gamma model for peak height variability — gamma_model","text":"","code":"gamma_model(   mixture_proportions,   mu,   cv,   degradation_beta = rep(1, length(mixture_proportions)),   LSAE = stats::setNames(rep(1, length(model_settings$locus_names)),     model_settings$locus_names),   model_settings )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gamma_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines a gamma model for peak height variability — gamma_model","text":"mixture_proportions Numeric vector mixture proportion contributor. mu Numeric. Expectation full heterozygote contributing allele peak height. cv Numeric. Coefficient variation full heterozygote contributing allele peak height degradation_beta Numeric Vector length mixture_proportions. Degradation slope parameters contributor. Defaults 1 contributor (.e. degraded) LSAE Numeric vector (named) Locus Specific Amplification Efficiencies. See sample_LSAE. Defaults 1 locus. model_settings List. Possible parameters: locus_names. Character vector. detection_threshold. Numeric vector (named) Detection Thresholds. size_regression. Function, see read_size_regression. stutter_model. Optionally stutter_model object gives expected stutter heights. See global_stutter_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gamma_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines a gamma model for peak height variability — gamma_model","text":"Object class pg_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gamma_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defines a gamma model for peak height variability — gamma_model","text":"Define gamma model peak height variability parametrisation described Bleka et al. model may used sample DNA profiles using sample_mixture_from_genotypes function. Alternatively, sample many models profiles one go parameters according specified distribution, sample_mixtures function can used.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gamma_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Defines a gamma model for peak height variability — gamma_model","text":"Bleka, Ø., Storvik, G., & Gill, P. (2016). EuroForMix: open source software based continuous model evaluate STR DNA profiles mixture contributors artefacts. Forensic Science International: Genetics, 21, 35-44. doi:10.1016/j.fsigen.2015.11.008","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gamma_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defines a gamma model for peak height variability — gamma_model","text":"","code":"# read allele frequencies freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                                        package = \"simDNAmixtures\"))  gf <- gf_configuration()  # define the gamma model for peak heights model <- gamma_model(mixture_proportions = 1, mu = 1000.,                     cv = 0.1, model_settings = gf$gamma_settings_no_stutter)  # sample a single source profile (1-person 'mixture') u1 <- sample_contributor_genotypes(\"U1\", freqs, loci = gf$autosomal_markers) sample <- sample_mixture_from_genotypes(u1, model)  # peaks follow a gamma distribution with an expected height of # 1,000 for heterozygous alleles; 2,000 for homozygotes hist(sample$Height)   # the gamma distribution is more obvious if many samples are taken many_samples <- replicate(n = 1e2,                           sample_mixture_from_genotypes(u1, model),                           simplify = FALSE)  hist(sapply(many_samples, function(x) x$Height))"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gf_configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Stutters and size regressions for a GlobalFiler 3500 kit — gf_configuration","title":"Stutters and size regressions for a GlobalFiler 3500 kit — gf_configuration","text":"dataset containing default parameters settings GlobalFiler 3500 kit.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gf_configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stutters and size regressions for a GlobalFiler 3500 kit — gf_configuration","text":"","code":"gf_configuration()"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/gf_configuration.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Stutters and size regressions for a GlobalFiler 3500 kit — gf_configuration","text":"list : autosomal_markers Names autosomal markers GlobalFiler kit repeat_length_by_marker Named numeric STR repeat length locus name size_regression See read_size_regression stutters List 4 stutter types, used allele_specific_stutter_model stutter_model convenience, pre-defined allele_specific_stutter_model log_normal_settings Settings corresponding log normal model stutter types log_normal_settings_fwbw Settings corresponding log normal model backward forward stutter gamma_settings Settings corresponding gamma model stutter types gamma_settings_no_stutter Settings gamma model without stutter","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/global_stutter_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Global stutter model where the expected stutter rate is constant across alleles and loci — global_stutter_model","title":"Global stutter model where the expected stutter rate is constant across alleles and loci — global_stutter_model","text":"Global stutter model expected stutter rate constant across alleles loci","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/global_stutter_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global stutter model where the expected stutter rate is constant across alleles and loci — global_stutter_model","text":"","code":"global_stutter_model(   back_stutter_rate,   forward_stutter_rate,   size_regression,   sex_locus_name = \"AMEL\" )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/global_stutter_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Global stutter model where the expected stutter rate is constant across alleles and loci — global_stutter_model","text":"back_stutter_rate Numeric. (Optional) forward_stutter_rate Numeric. (Optional) size_regression Function, see read_size_regression. sex_locus_name Character vector, defaults \"AMEL\".","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/global_stutter_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Global stutter model where the expected stutter rate is constant across alleles and loci — global_stutter_model","text":"Object class stutter_model used e.g. gamma_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/global_stutter_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Global stutter model where the expected stutter rate is constant across alleles and loci — global_stutter_model","text":"pg_model constructed (see gamma_model), stutter model can optionally applied. global stutter model, expected stutter rate constant across loci parent alleles.","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/global_stutter_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global stutter model where the expected stutter rate is constant across alleles and loci — global_stutter_model","text":"","code":"# the stutter model needs a size regression to determine fragment length # of stutter products size_regression <- read_size_regression(system.file(\"extdata\", \"GlobalFiler_SizeRegression.csv\",package = \"simDNAmixtures\"))  # define a stutter model with an expected back stutter rate of 10% stutter_model <- global_stutter_model(back_stutter_rate = 0.1,                                      size_regression = size_regression)  stutter_model #> $stutters #> $stutters$BackStutter #> $stutters$BackStutter$rate #> [1] 0.1 #>  #> $stutters$BackStutter$delta #> [1] -1 #>  #>  #>  #> $sex_locus_name #> [1] \"AMEL\" #>  #> $size_regression #> function (locus, allele)  #> { #>     if (has_exceptions) { #>         locus_exceptions <- exceptions[[locus]] #>         if (!is.null(locus_exceptions)) { #>             if (allele %in% names(locus_exceptions)) { #>                 size <- locus_exceptions[[allele]] #>                 return(size) #>             } #>         } #>     } #>     regression_locus <- regression_df_by_locus[[locus]] #>     if (is.null(regression_locus)) { #>         stop(\"No size regression available for locus \", locus) #>     } #>     intercept <- regression_locus$Intercept #>     slope <- regression_locus$Slope #>     allele_numeric <- as.numeric(allele) #>     if (has_repeat_length_by_marker) { #>         repeat_length <- repeat_length_by_marker[[locus]] #>         if (!is.null(repeat_length)) { #>             allele_numeric <- repeats_to_decimals(allele_numeric,  #>                 repeat_length) #>         } #>     } #>     intercept + slope * allele_numeric #> } #> <bytecode: 0x5612a0cdb8a0> #> <environment: 0x5612a449f5c0> #>  #> $add_expected_stutter #> function (...)  #> global_stutter_model_add_expected_stutter(stutter_model, ...) #> <bytecode: 0x5612a4661748> #> <environment: 0x5612a46611d0> #>  #> attr(,\"class\") #> [1] \"stutter_model\""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/kits.html","id":null,"dir":"Reference","previous_headings":"","what":"Properties such as loci, dye, sizes for most standard forensic kits — kits","title":"Properties such as loci, dye, sizes for most standard forensic kits — kits","text":"dataset containing properties forensic DNA kits.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/kits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properties such as loci, dye, sizes for most standard forensic kits — kits","text":"","code":"kits"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/kits.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Properties such as loci, dye, sizes for most standard forensic kits — kits","text":"list data frames containing variables : Panel Kit name Marker  Allele  Size Fragment length Color Dye colour","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/kits.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Properties such as loci, dye, sizes for most standard forensic kits — kits","text":"https://github.com/oyvble/euroformix/blob/master/inst/extdata/kit.txt","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/log_normal_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines a log normal model for peak height variability — log_normal_model","title":"Defines a log normal model for peak height variability — log_normal_model","text":"Defines log normal model peak height variability","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/log_normal_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines a log normal model for peak height variability — log_normal_model","text":"","code":"log_normal_model(   template,   degradation = rep(0, length(template)),   LSAE = stats::setNames(rep(1, length(model_settings$locus_names)),     model_settings$locus_names),   c2,   k2,   model_settings )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/log_normal_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines a log normal model for peak height variability — log_normal_model","text":"template Numeric vector degradation Numeric vector length template. Degradation parameters contributor. LSAE Numeric vector (named) Locus Specific Amplification Efficiencies. See sample_LSAE. Defaults 1 locus. c2 Numeric. Allele variance parameter. k2 Optionally numeric vector stutter variance parameters. See sample_log_normal_stutter_variance. model_settings List. Possible parameters: locus_names. Character vector. degradation_parameter_cap. Numeric. c2_prior. Numeric length two shape scale. LSAE_variance_prior. Numeric length one. detection_threshold. Numeric vector (named) Detection Thresholds. Defaults 50 locus. size_regression. Function, see read_size_regression. stutter_model. Optionally stutter_model object gives expected stutter heights. See global_stutter_model. stutter_variability. Optionally peak height variability parameters stutters. Required stutter_model supplied.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/log_normal_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines a log normal model for peak height variability — log_normal_model","text":"Object class pg_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/log_normal_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defines a log normal model for peak height variability — log_normal_model","text":"Define log normal model peak height variability parametrisation described Bright et al. model may used sample DNA profiles using sample_mixture_from_genotypes function. Alternatively, sample many models profiles one go parameters according specified distribution, sample_mixtures function can used.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/log_normal_model.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Defines a log normal model for peak height variability — log_normal_model","text":"Bright, J.. et al. (2016). Developmental validation STRmix™, expert software interpretation forensic DNA profiles. Forensic Science International: Genetics, 23, 226-239. doi:10.1016/j.fsigen.2016.05.007","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/log_normal_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defines a log normal model for peak height variability — log_normal_model","text":"","code":"gf <- gf_configuration() freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                            package = \"simDNAmixtures\"))  k2 <- sample_log_normal_stutter_variance(gf$log_normal_settings$stutter_variability)  model <- log_normal_model(template = 1e3, c2 = 15, k2 = k2,                           model_settings = gf$log_normal_settings) model #> $locus_names #>  [1] \"D3S1358\"  \"vWA\"      \"D16S539\"  \"CSF1PO\"   \"TPOX\"     \"AMEL\"     #>  [7] \"D8S1179\"  \"D21S11\"   \"D18S51\"   \"D2S441\"   \"D19S433\"  \"TH01\"     #> [13] \"FGA\"      \"D22S1045\" \"D5S818\"   \"D13S317\"  \"D7S820\"   \"SE33\"     #> [19] \"D10S1248\" \"D1S1656\"  \"D12S391\"  \"D2S1338\"  #>  #> $detection_threshold #>  D3S1358      vWA  D16S539   CSF1PO     TPOX     AMEL  D8S1179   D21S11  #>       75       75       75       75       75       75      100      100  #>   D18S51   D2S441  D19S433     TH01      FGA D22S1045   D5S818  D13S317  #>      100       60       60       60       60       80       80       80  #>   D7S820     SE33 D10S1248  D1S1656  D12S391  D2S1338  #>       80       80      100      100      100      100  #>  #> $parameters #> $parameters$model #> [1] \"log_normal_model\" #>  #> $parameters$template #> [1] 1000 #>  #> $parameters$degradation #> [1] 0 #>  #> $parameters$c2 #> [1] 15 #>  #> $parameters$k2 #>       k2BackStutter    k2ForwardStutter    k22bpBackStutter k2DoubleBackStutter  #>          28.7205737           0.9720239           6.4116270           6.9526035  #>  #> $parameters$LSAE #>  D3S1358      vWA  D16S539   CSF1PO     TPOX     AMEL  D8S1179   D21S11  #>        1        1        1        1        1        1        1        1  #>   D18S51   D2S441  D19S433     TH01      FGA D22S1045   D5S818  D13S317  #>        1        1        1        1        1        1        1        1  #>   D7S820     SE33 D10S1248  D1S1656  D12S391  D2S1338  #>        1        1        1        1        1        1  #>  #>  #> $size_regression #> function (locus, allele)  #> { #>     if (has_exceptions) { #>         locus_exceptions <- exceptions[[locus]] #>         if (!is.null(locus_exceptions)) { #>             if (allele %in% names(locus_exceptions)) { #>                 size <- locus_exceptions[[allele]] #>                 return(size) #>             } #>         } #>     } #>     regression_locus <- regression_df_by_locus[[locus]] #>     if (is.null(regression_locus)) { #>         stop(\"No size regression available for locus \", locus) #>     } #>     intercept <- regression_locus$Intercept #>     slope <- regression_locus$Slope #>     allele_numeric <- as.numeric(allele) #>     if (has_repeat_length_by_marker) { #>         repeat_length <- repeat_length_by_marker[[locus]] #>         if (!is.null(repeat_length)) { #>             allele_numeric <- repeats_to_decimals(allele_numeric,  #>                 repeat_length) #>         } #>     } #>     intercept + slope * allele_numeric #> } #> <bytecode: 0x5612a0cdb8a0> #> <environment: 0x5612a6905da8> #>  #> $build_expected_profile_and_sample_peak_heights #> function (genotypes)  #> { #>     expected_profile <- log_normal_model_build_expected_profile(model,  #>         genotypes) #>     x <- log_normal_model_sample_peak_heights(model, expected_profile,  #>         model$stutter_variability) #>     x$LSAE <- LSAE[x$Marker] #>     x #> } #> <bytecode: 0x5612a7907180> #> <environment: 0x5612a790ab60> #>  #> $sample_name_suffix #> [1] \"N1_1000_a\" #>  #> $stutter_model #> $stutter_types #> $stutter_types$BackStutter #> $name #> [1] \"BackStutter\" #>  #> $delta #> [1] -1 #>  #> $applies_to_all_loci #> [1] TRUE #>  #> $regression #> function (locus, allele)  #> { #>     regression_locus <- regression_df_by_locus[[locus]] #>     if (is.null(regression_locus)) { #>         stop(\"No stutter regression available for locus \", locus) #>     } #>     intercept <- regression_locus$Intercept #>     slope <- regression_locus$Slope #>     max(min_stutter_ratio, intercept + slope * as.numeric(allele)) #> } #> <bytecode: 0x5612a08a8d30> #> <environment: 0x5612a6f39208> #>  #> $exceptions #> $exceptions$D8S1179 #>       8      10      11      12      13      14      15      16      18  #> 0.03152 0.04864 0.05584 0.06524 0.05913 0.06564 0.07019 0.07451 0.08698  #>  #> $exceptions$D21S11 #>      27      28      29      30    30.2      31    31.2      32    32.2    33.2  #> 0.04241 0.05957 0.05909 0.07504 0.05746 0.07995 0.06253 0.08734 0.07836 0.08319  #>  #> $exceptions$D2S441 #>      10      11      12      13      14      15      16  #> 0.03342 0.05468 0.06129 0.04058 0.03950 0.04500 0.05982  #>  #> $exceptions$D19S433 #>     6.2       8       9      10      11    11.1    11.2      12    12.1    12.2  #> 0.00005 0.00876 0.00876 0.02618 0.03489 0.02618 0.04360 0.04360 0.00005 0.05231  #>      13    13.2      14    14.2      15    15.2      16    16.2      17    17.2  #> 0.05231 0.06102 0.06102 0.06973 0.06973 0.07844 0.07844 0.08715 0.08715 0.09151  #>      18    18.2    19.2  #> 0.09586 0.10457 0.11328  #>  #> $exceptions$TH01 #>       4       5       6       7       8     8.3       9     9.3      10    10.3  #> 0.00223 0.00799 0.01375 0.01951 0.02527 0.00799 0.03103 0.01375 0.03679 0.01375  #>      11      12    13.3  #> 0.04255 0.04831 0.02527  #>  #> $exceptions$SE33 #>      13      14      15      16      17      18      19      20      21    22.2  #> 0.05466 0.05775 0.06570 0.07151 0.07849 0.08581 0.08929 0.09947 0.10593 0.06981  #>    23.2    24.2    25.2    26.2    27.2    28.2    29.2    30.2    31.2    32.2  #> 0.06975 0.08019 0.08294 0.08884 0.09311 0.09721 0.10606 0.11024 0.11982 0.11991  #>  #> $exceptions$D1S1656 #>       8       9      10      11      12      13    13.3      14    14.3      15  #> 0.02644 0.03559 0.04017 0.05389 0.05847 0.06304 0.05389 0.07677 0.03559 0.08134  #>    15.3      16    16.3      17    17.3      18    18.3    19.3  #> 0.04932 0.09351 0.05389 0.09964 0.06304 0.10879 0.07219 0.08134  #>  #> $exceptions$D2S1338 #>      16      17      18      19      20      21      22      23      24      25  #> 0.04892 0.05731 0.06614 0.06862 0.07423 0.08291 0.06979 0.07556 0.08495 0.09530  #>      26  #> 0.10131  #>  #>  #> $get_expected_stutter_ratio #> function (locus, allele)  #> { #>     exception <- NULL #>     if (!is.null(stutter$exceptions[[locus]])) { #>         if (as.character(allele) %in% names(stutter$exceptions[[locus]])) { #>             exception <- stutter$exceptions[[locus]][[as.character(allele)]] #>         } #>     } #>     if (isTRUE(exception > 0)) { #>         return(exception) #>     } #>     else { #>         return(stutter$regression(locus, allele)) #>     } #> } #> <bytecode: 0x5612a034dec0> #> <environment: 0x5612a7022ee8> #>  #> attr(,\"class\") #> [1] \"stutter_type\" #>  #> $stutter_types$ForwardStutter #> $name #> [1] \"ForwardStutter\" #>  #> $delta #> [1] 1 #>  #> $applies_to_all_loci #> [1] TRUE #>  #> $regression #> function (locus, allele)  #> { #>     regression_locus <- regression_df_by_locus[[locus]] #>     if (is.null(regression_locus)) { #>         stop(\"No stutter regression available for locus \", locus) #>     } #>     intercept <- regression_locus$Intercept #>     slope <- regression_locus$Slope #>     max(min_stutter_ratio, intercept + slope * as.numeric(allele)) #> } #> <bytecode: 0x5612a08a8d30> #> <environment: 0x5612a70bdcf0> #>  #> $get_expected_stutter_ratio #> function (locus, allele)  #> { #>     exception <- NULL #>     if (!is.null(stutter$exceptions[[locus]])) { #>         if (as.character(allele) %in% names(stutter$exceptions[[locus]])) { #>             exception <- stutter$exceptions[[locus]][[as.character(allele)]] #>         } #>     } #>     if (isTRUE(exception > 0)) { #>         return(exception) #>     } #>     else { #>         return(stutter$regression(locus, allele)) #>     } #> } #> <bytecode: 0x5612a034dec0> #> <environment: 0x5612a722b288> #>  #> attr(,\"class\") #> [1] \"stutter_type\" #>  #> $stutter_types$`2bpBackStutter` #> $name #> [1] \"2bpBackStutter\" #>  #> $delta #> [1]  0 -2 #>  #> $applies_to_all_loci #> [1] FALSE #>  #> $applies_to_loci #> [1] \"SE33\"    \"D1S1656\" #>  #> $repeat_length_by_marker #>  D3S1358      vWA  D16S539   CSF1PO     TPOX  D8S1179   D21S11   D18S51  #>        4        4        4        4        4        4        4        4  #>   D2S441  D19S433     TH01      FGA D22S1045   D5S818  D13S317   D7S820  #>        4        4        4        4        3        4        4        4  #>     SE33 D10S1248  D1S1656  D12S391  D2S1338  #>        4        4        4        4        4  #>  #> $regression #> function (locus, allele)  #> { #>     regression_locus <- regression_df_by_locus[[locus]] #>     if (is.null(regression_locus)) { #>         stop(\"No stutter regression available for locus \", locus) #>     } #>     intercept <- regression_locus$Intercept #>     slope <- regression_locus$Slope #>     max(min_stutter_ratio, intercept + slope * as.numeric(allele)) #> } #> <bytecode: 0x5612a08a8d30> #> <environment: 0x5612a723d138> #>  #> $get_expected_stutter_ratio #> function (locus, allele)  #> { #>     exception <- NULL #>     if (!is.null(stutter$exceptions[[locus]])) { #>         if (as.character(allele) %in% names(stutter$exceptions[[locus]])) { #>             exception <- stutter$exceptions[[locus]][[as.character(allele)]] #>         } #>     } #>     if (isTRUE(exception > 0)) { #>         return(exception) #>     } #>     else { #>         return(stutter$regression(locus, allele)) #>     } #> } #> <bytecode: 0x5612a034dec0> #> <environment: 0x5612a7323f50> #>  #> attr(,\"class\") #> [1] \"stutter_type\" #>  #> $stutter_types$DoubleBackStutter #> $name #> [1] \"DoubleBackStutter\" #>  #> $delta #> [1] -2 #>  #> $applies_to_all_loci #> [1] TRUE #>  #> $regression #> function (locus, allele)  #> { #>     regression_locus <- regression_df_by_locus[[locus]] #>     if (is.null(regression_locus)) { #>         stop(\"No stutter regression available for locus \", locus) #>     } #>     intercept <- regression_locus$Intercept #>     slope <- regression_locus$Slope #>     max(min_stutter_ratio, intercept + slope * as.numeric(allele)) #> } #> <bytecode: 0x5612a08a8d30> #> <environment: 0x5612a7337968> #>  #> $get_expected_stutter_ratio #> function (locus, allele)  #> { #>     exception <- NULL #>     if (!is.null(stutter$exceptions[[locus]])) { #>         if (as.character(allele) %in% names(stutter$exceptions[[locus]])) { #>             exception <- stutter$exceptions[[locus]][[as.character(allele)]] #>         } #>     } #>     if (isTRUE(exception > 0)) { #>         return(exception) #>     } #>     else { #>         return(stutter$regression(locus, allele)) #>     } #> } #> <bytecode: 0x5612a034dec0> #> <environment: 0x5612a745ff18> #>  #> attr(,\"class\") #> [1] \"stutter_type\" #>  #>  #> $size_regression #> function (locus, allele)  #> { #>     if (has_exceptions) { #>         locus_exceptions <- exceptions[[locus]] #>         if (!is.null(locus_exceptions)) { #>             if (allele %in% names(locus_exceptions)) { #>                 size <- locus_exceptions[[allele]] #>                 return(size) #>             } #>         } #>     } #>     regression_locus <- regression_df_by_locus[[locus]] #>     if (is.null(regression_locus)) { #>         stop(\"No size regression available for locus \", locus) #>     } #>     intercept <- regression_locus$Intercept #>     slope <- regression_locus$Slope #>     allele_numeric <- as.numeric(allele) #>     if (has_repeat_length_by_marker) { #>         repeat_length <- repeat_length_by_marker[[locus]] #>         if (!is.null(repeat_length)) { #>             allele_numeric <- repeats_to_decimals(allele_numeric,  #>                 repeat_length) #>         } #>     } #>     intercept + slope * allele_numeric #> } #> <bytecode: 0x5612a0cdb8a0> #> <environment: 0x5612a6905da8> #>  #> $sex_locus_name #> [1] \"AMEL\" #>  #> $add_expected_stutter #> function (...)  #> allele_specific_stutter_model_add_expected_stutter(stutter_model,  #>     ...) #> <bytecode: 0x5612a39dbaa8> #> <environment: 0x5612a7467298> #>  #> attr(,\"class\") #> [1] \"stutter_model\" #>  #> $stutter_variability #> $stutter_variability$BackStutter #> $stutter_variability$BackStutter$k2_prior #> [1] 1.884 7.686 #>  #> $stutter_variability$BackStutter$inversely_proportional_to_parent #> [1] TRUE #>  #> $stutter_variability$BackStutter$max_stutter_ratio #> [1] 0.3 #>  #>  #> $stutter_variability$ForwardStutter #> $stutter_variability$ForwardStutter$k2_prior #> [1] 2.144 4.507 #>  #> $stutter_variability$ForwardStutter$inversely_proportional_to_parent #> [1] FALSE #>  #> $stutter_variability$ForwardStutter$max_stutter_ratio #> [1] 0.15 #>  #>  #> $stutter_variability$`2bpBackStutter` #> $stutter_variability$`2bpBackStutter`$k2_prior #> [1] 2.189 1.431 #>  #> $stutter_variability$`2bpBackStutter`$inversely_proportional_to_parent #> [1] FALSE #>  #> $stutter_variability$`2bpBackStutter`$max_stutter_ratio #> [1] 0.1 #>  #>  #> $stutter_variability$DoubleBackStutter #> $stutter_variability$DoubleBackStutter$k2_prior #> [1] 3.429 2.032 #>  #> $stutter_variability$DoubleBackStutter$inversely_proportional_to_parent #> [1] FALSE #>  #> $stutter_variability$DoubleBackStutter$max_stutter_ratio #> [1] 0.05 #>  #>  #>  #> attr(,\"class\") #> [1] \"pg_model\""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_STRmix_kit_settings.html","id":null,"dir":"Reference","previous_headings":"","what":"Read STRmix Kit Settings — read_STRmix_kit_settings","title":"Read STRmix Kit Settings — read_STRmix_kit_settings","text":"Read STRmix kit settings XML file associated stutter directory.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_STRmix_kit_settings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read STRmix Kit Settings — read_STRmix_kit_settings","text":"","code":"read_STRmix_kit_settings(filename, stutters_dir, include_y_loci = FALSE)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_STRmix_kit_settings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read STRmix Kit Settings — read_STRmix_kit_settings","text":"filename Character vector specifying path XML file containing profiling kit settings. stutters_dir Character vector specifying directory path stutter settings files located. include_y_loci Y loci included list locus names? Default FALSE.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_STRmix_kit_settings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read STRmix Kit Settings — read_STRmix_kit_settings","text":"list containing following components: locus_names. Character vector. degradation_parameter_cap. Numeric. c2_prior. Numeric length two shape scale. LSAE_variance_prior. Numeric length one. detection_threshold. Numeric vector (named) Detection Thresholds. Defaults 50 locus. size_regression. Function, see read_size_regression. stutter_model. list representing stutter model. stutter_variability. list representing stutter variability.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_allele_freqs.html","id":null,"dir":"Reference","previous_headings":"","what":"Read allele frequencies in FSIgen format (.csv) — read_allele_freqs","title":"Read allele frequencies in FSIgen format (.csv) — read_allele_freqs","text":"Read allele frequencies FSIgen format (.csv)","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_allele_freqs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read allele frequencies in FSIgen format (.csv) — read_allele_freqs","text":"","code":"read_allele_freqs(filename, remove_zeroes = TRUE, normalise = TRUE)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_allele_freqs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read allele frequencies in FSIgen format (.csv) — read_allele_freqs","text":"filename Path csv file. remove_zeroes Logical. frequencies 0 removed return value? Default TRUE. normalise Logical. frequencies normalised sum 1? Default TRUE.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_allele_freqs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read allele frequencies in FSIgen format (.csv) — read_allele_freqs","text":"Named list frequencies locus. frequencies locus returned named numeric vector names corresponding alleles.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_allele_freqs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read allele frequencies in FSIgen format (.csv) — read_allele_freqs","text":"Reads allele frequencies .csv file. file FSIgen format, .e. comma separated first column specifying allele labels one column per locus. last row number observations. error checking done since file format loosely defined, e.g. restrict first column name last row name.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_allele_freqs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read allele frequencies in FSIgen format (.csv) — read_allele_freqs","text":"","code":"# below we read an allele freqs file that comes with the package filename <- system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",package = \"simDNAmixtures\") freqs <- read_allele_freqs(filename) freqs # the output is a list with an attribute named \\code{N} giving the sample size. #> $AMEL #> X,X X,Y  #> 0.5 0.5  #>  #> $D3S1358 #>         13         14         15         16         17         18         19  #> 0.00249975 0.13858614 0.24747525 0.23267673 0.21037896 0.16338366 0.00499950  #>  #> $vWA #>     13     14     15     16     17     18     19     20  #> 0.0050 0.0990 0.1139 0.2054 0.2673 0.2178 0.0817 0.0099  #>  #> $D16S539 #>          8          9         10         11         12         13         14  #> 0.01979604 0.10397920 0.06438712 0.27224555 0.34153169 0.16336733 0.03219356  #>         15  #> 0.00249950  #>  #> $CSF1PO #>          7          8          9         10       10.3         11         12  #> 0.00249950 0.00499900 0.01979604 0.25244951 0.00249950 0.29944011 0.32663467  #>         13         14         15  #> 0.07178564 0.01489702 0.00499900  #>  #> $TPOX #>      8      9     10     11     12  #> 0.5470 0.1238 0.0371 0.2550 0.0371  #>  #> $Yindel #> 2  #> 1  #>  #> $D8S1179 #>      8      9     10     11     12     13     14     15     16     17  #> 0.0198 0.0099 0.1089 0.0594 0.1411 0.3342 0.2054 0.1064 0.0124 0.0025  #>  #> $D21S11 #>       24.2         27         28         29         30       30.2         31  #> 0.00499900 0.04459108 0.16826635 0.18066387 0.23265347 0.03959208 0.07178564  #>       31.2         32       32.2       33.2       35.2  #> 0.10147970 0.01489702 0.10887822 0.02969406 0.00249950  #>  #> $D18S51 #>         10         11         12         13         14         15         16  #> 0.01489553 0.01239628 0.12866140 0.11876437 0.17564731 0.13365990 0.10396881  #>         17         18         19         20         21         22  #> 0.15345396 0.09157253 0.03468959 0.02479256 0.00499850 0.00249925  #>  #> $DYS391 #>      9     10     11  #> 0.0206 0.4536 0.5258  #>  #> $D2S441 #>          9         10         11       11.3         12       12.3         13  #> 0.00249975 0.18068193 0.30936906 0.08419158 0.04949505 0.00249975 0.04949505  #>         14         15         16  #> 0.26237376 0.05199480 0.00739926  #>  #> $D19S433 #>         12       12.2         13       13.2         14       14.2         15  #> 0.09648070 0.00499900 0.27964407 0.02229554 0.34893021 0.00989802 0.14357129  #>       15.2         16       16.2         17       17.2       18.2  #> 0.02479504 0.03959208 0.01979604 0.00249950 0.00499900 0.00249950  #>  #> $TH01 #>      6      7      8    8.3      9    9.3     10  #> 0.2252 0.1733 0.1262 0.0025 0.1658 0.3045 0.0025  #>  #> $FGA #>     18     19     20   20.2     21     22   22.2     23     24     25     26  #> 0.0297 0.0545 0.1436 0.0025 0.1757 0.1881 0.0099 0.1584 0.1386 0.0718 0.0173  #>     27  #> 0.0099  #>  #> $D22S1045 #>         11         12         13         14         15         16         17  #> 0.14358564 0.00739926 0.00499950 0.06189381 0.36386361 0.31676832 0.09649035  #>         18  #> 0.00499950  #>  #> $D5S818 #>      9     10     11     12     13     14     15  #> 0.0297 0.0495 0.4084 0.3515 0.1510 0.0074 0.0025  #>  #> $D13S317 #>          8          9         10         11         12         13         14  #> 0.10148985 0.08169183 0.04949505 0.31186881 0.30936906 0.11138886 0.03469653  #>  #> $D7S820 #>      6      7      8      9     10     11     12     13     14  #> 0.0025 0.0173 0.1634 0.1460 0.2896 0.2030 0.1411 0.0297 0.0074  #>  #> $SE33 #>          12          13        13.2          14        14.2          15  #> 0.017293083 0.007397041 0.002499000 0.027189124 0.002499000 0.042083167  #>          16        16.3          17        17.3          18        18.3  #> 0.042083167 0.002499000 0.071771291 0.002499000 0.079168333 0.002499000  #>          19        19.2          20        20.2          21        21.2  #> 0.066773291 0.004998001 0.042083167 0.017293083 0.024790084 0.012395042  #>          22        22.2          23        23.2          24        24.2  #> 0.004998001 0.027189124 0.004998001 0.042083167 0.002499000 0.029688125  #>          25        25.2        26.2        27.2        28.2        29.2  #> 0.002499000 0.049480208 0.037085166 0.064374250 0.069272291 0.091563375  #>        30.2        31.2          32        32.2        33.2          34  #> 0.054478209 0.029688125 0.002499000 0.009896042 0.007397041 0.002499000  #>  #> $D10S1248 #>         10         11         12         13         14         15         16  #> 0.00249975 0.00249975 0.03709629 0.33656634 0.27477252 0.17328267 0.13118688  #>         17         18  #> 0.03959604 0.00249975  #>  #> $D1S1656 #>         10         11         12         13         14       14.3         15  #> 0.00499950 0.06929307 0.11878812 0.04949505 0.09159084 0.00739926 0.14358564  #>       15.3         16       16.3         17       17.3       18.3       19.3  #> 0.05939406 0.11138886 0.05199480 0.05689431 0.15098490 0.07179282 0.01239876  #>  #> $D12S391 #>          15          16          17        17.3          18        18.3  #> 0.039588124 0.042087374 0.103968809 0.024792562 0.175647306 0.019794062  #>          19        19.3          20        20.3          21          22  #> 0.106368090 0.009897031 0.103968809 0.002499250 0.133659902 0.103968809  #>          23          24          25          26          27  #> 0.074277717 0.027191842 0.024792562 0.004998500 0.002499250  #>  #> $D2S1338 #>     16     17     18     19     20     21     22     23     24     25     26  #> 0.0297 0.1931 0.0668 0.1510 0.1485 0.0198 0.0297 0.1213 0.1213 0.0965 0.0223  #>  #> $`Penta E` #>          5          6          7          8          9         10         11  #> 0.07919208 0.00249975 0.13608639 0.01729827 0.01239876 0.09409059 0.09899010  #>         12         13         14         15         16       16.4         17  #> 0.15838416 0.10888911 0.07179282 0.04209579 0.04459554 0.00249975 0.06929307  #>         18         19         20         21  #> 0.02969703 0.01239876 0.01239876 0.00739926  #>  #> $`Penta D` #>        2.2          7          8          9         10         11         12  #> 0.00499950 0.00499950 0.01729827 0.23507649 0.11628837 0.13368663 0.21037896  #>         13         14         15  #> 0.20787921 0.05449455 0.01489851  #>  #> attr(,\"N\") #>     AMEL  D3S1358      vWA  D16S539   CSF1PO     TPOX   Yindel  D8S1179  #>      404      404      404      404      404      404       97      404  #>   D21S11   D18S51   DYS391   D2S441  D19S433     TH01      FGA D22S1045  #>      404      404      194      404      404      404      404      404  #>   D5S818  D13S317   D7S820     SE33 D10S1248  D1S1656  D12S391  D2S1338  #>      404      404      404      404      404      404      404      404  #>  Penta E  Penta D  #>      404      404"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_size_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a size regression file — read_size_regression","title":"Reads a size regression file — read_size_regression","text":"Reads size regression file","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_size_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a size regression file — read_size_regression","text":"","code":"read_size_regression(filename, exceptions, repeat_length_by_marker)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_size_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a size regression file — read_size_regression","text":"filename Path file (character). exceptions Optionally list providing sizes alleles covered regression. See examples can used assign sizes X Y Amelogenin locus. repeat_length_by_marker Optionally named integer vector repeat lengths marker. provided, .3 allele convert e.g. .75 tetranucleotide.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_size_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a size regression file — read_size_regression","text":"function takes locus name allele arguments returns size.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_size_regression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads a size regression file — read_size_regression","text":"Read regression file disk returns function provides fragment length (bp) given locus allele. DNA profiles consist observed peaks (alleles stutter products) several loci well peak heights sizes. size refers fragment length (bp). linear relationship exists size peak size. peaks sampled sample_mixture_from_genotypes function, size assigned using size regression. read_size_regression function reads regression disk.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_size_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads a size regression file — read_size_regression","text":"","code":"filename <- system.file(\"extdata\",                         \"GlobalFiler_SizeRegression.csv\",                         package = \"simDNAmixtures\")  regression <- read_size_regression(filename)  # obtain size for the 12 allele at the vWA locus regression(\"vWA\", 12) #> [1] 160.7627  # now add AMEL sizes regression_with_AMEL <- read_size_regression(filename, exceptions = list(                           AMEL = stats::setNames(c(98.5, 104.5),                                                  nm = c(\"X\", \"Y\")))) # check that we can obtain size for X at AMEL stopifnot(regression_with_AMEL(\"AMEL\", \"X\") == 98.5)  # pass in repeat_length_by_marker for more precise estimates gf <- gf_configuration()  regression_with_repeat_length <- read_size_regression(filename,            repeat_length_by_marker = gf$repeat_length_by_marker)  # obtain size for the 15.3 allele at the D1S1656 locus stopifnot(regression_with_repeat_length(\"D1S1656\", 15.3) ==            121.628203912362 + 15.75 * 4.2170043570021)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_exceptions.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a stutter exceptions file with overrides for expected stutter ratios — read_stutter_exceptions","title":"Reads a stutter exceptions file with overrides for expected stutter ratios — read_stutter_exceptions","text":"Reads stutter exceptions file overrides expected stutter ratios","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_exceptions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a stutter exceptions file with overrides for expected stutter ratios — read_stutter_exceptions","text":"","code":"read_stutter_exceptions(filename)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_exceptions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a stutter exceptions file with overrides for expected stutter ratios — read_stutter_exceptions","text":"filename Character. Path file.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_exceptions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a stutter exceptions file with overrides for expected stutter ratios — read_stutter_exceptions","text":"named list stutter exceptions locus. loucs, exceptions given named numeric names corresponding parent alleles expected stutter rates given values.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_exceptions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads a stutter exceptions file with overrides for expected stutter ratios — read_stutter_exceptions","text":"Reads file disk returns named numeric vector stutter ratio exceptions given locus allele.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_exceptions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads a stutter exceptions file with overrides for expected stutter ratios — read_stutter_exceptions","text":"","code":"filename <- system.file(\"extdata\",\"GlobalFiler_Stutter_Exceptions_3500.csv\",                         package = \"simDNAmixtures\") exceptions <- read_stutter_exceptions(filename) exceptions$TH01[\"9.3\"] #>     9.3  #> 0.01375"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads a stutter regression file — read_stutter_regression","title":"Reads a stutter regression file — read_stutter_regression","text":"Reads stutter regression file","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads a stutter regression file — read_stutter_regression","text":"","code":"read_stutter_regression(filename, min_stutter_ratio = 0.001)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads a stutter regression file — read_stutter_regression","text":"filename Character. Path file. min_stutter_ratio Numeric.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads a stutter regression file — read_stutter_regression","text":"function takes locus name allele arguments returns expected stutter ratio.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_regression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads a stutter regression file — read_stutter_regression","text":"Reads file disk returns function provides expected stutter ratio given locus allele.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_stutter_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads a stutter regression file — read_stutter_regression","text":"","code":"filename <- system.file(\"extdata\",\"GlobalFiler_Stutter_3500.txt\",                         package = \"simDNAmixtures\") regression <- read_stutter_regression(filename)  # obtain the expected stutter ratio for a 12 parent allele at the vWA locus regression(\"vWA\", 12) #> [1] 0.02029"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_wide_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Read wide table (.txt) with Allele1, Allele2, ... columns as is — read_wide_table","title":"Read wide table (.txt) with Allele1, Allele2, ... columns as is — read_wide_table","text":"Read wide table (.txt) Allele1, Allele2, ... columns ","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_wide_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read wide table (.txt) with Allele1, Allele2, ... columns as is — read_wide_table","text":"","code":"read_wide_table(filename)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_wide_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read wide table (.txt) with Allele1, Allele2, ... columns as is — read_wide_table","text":"filename Path txt file.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/read_wide_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read wide table (.txt) with Allele1, Allele2, ... columns as is — read_wide_table","text":"Dataframe","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_LSAE.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Locus Specific Amplification Efficiency (LSAE) according to prior — sample_LSAE","title":"Sample Locus Specific Amplification Efficiency (LSAE) according to prior — sample_LSAE","text":"Sample Locus Specific Amplification Efficiency (LSAE) according prior","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_LSAE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Locus Specific Amplification Efficiency (LSAE) according to prior — sample_LSAE","text":"","code":"sample_LSAE(LSAE_variance, locus_names)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_LSAE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample Locus Specific Amplification Efficiency (LSAE) according to prior — sample_LSAE","text":"LSAE_variance Numeric. See gf_configuration example. locus_names Character vector.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_LSAE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample Locus Specific Amplification Efficiency (LSAE) according to prior — sample_LSAE","text":"Named numeric LSAEs locus (names).","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_LSAE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Locus Specific Amplification Efficiency (LSAE) according to prior — sample_LSAE","text":"Bright et al. log normal model, expected peak height includes multiplicative factor locus (marker). factors called LSAEs (Locus Specific Amplification Efficiencies). model, prior log10 LSAE normal mean 0. variance can specified.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_LSAE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Locus Specific Amplification Efficiency (LSAE) according to prior — sample_LSAE","text":"","code":"gf <- gf_configuration() lsae <- sample_LSAE(LSAE_variance = gf$log_normal_settings$LSAE_variance_prior,                      locus_names = gf$autosomal_markers)  # the barplot shows that some loci amplify better than others barplot(lsae, las=2)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_contributor_genotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample genotypes for mixture contributors according to allele frequencies — sample_contributor_genotypes","title":"Sample genotypes for mixture contributors according to allele frequencies — sample_contributor_genotypes","text":"Sample genotypes mixture contributors according allele frequencies","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_contributor_genotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample genotypes for mixture contributors according to allele frequencies — sample_contributor_genotypes","text":"","code":"sample_contributor_genotypes(   contributors,   freqs,   linkage_map,   pedigree,   loci = names(freqs),   return_non_contributors = FALSE,   sex_locus_name = \"AMEL\" )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_contributor_genotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample genotypes for mixture contributors according to allele frequencies — sample_contributor_genotypes","text":"contributors Character vector unique names contributors. Valid names \"U1\", \"U2\", ... unrelated contributors names pedigree members related contributors. freqs Allele frequencies (see read_allele_freqs) linkage_map (optional) linkage map specifying recombination fractions loci. missing, loci assumed independent. See also sample_many_pedigree_genotypes. pedigree (optional) ped object loci Character vector locus names (defaults names attribute freqs) return_non_contributors Logical. genotypes non-contributing pedigree members also returned? sex_locus_name Character vector, defaults \"AMEL\"","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_contributor_genotypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample genotypes for mixture contributors according to allele frequencies — sample_contributor_genotypes","text":"List DataFrames genotypes pedigree member. See sample_genotype DataFrame format.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_contributor_genotypes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample genotypes for mixture contributors according to allele frequencies — sample_contributor_genotypes","text":"founder unrelated person, genotype sampled randomly drawing two alleles allele frequencies. non-founders get genotypes allele dropping, see sample_pedigree_genotypes details.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_contributor_genotypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample genotypes for mixture contributors according to allele frequencies — sample_contributor_genotypes","text":"","code":"# read allele frequencies freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                            package = \"simDNAmixtures\"))  # define a pedigree of siblings S1 and S2 (and their parents) ped_sibs <- pedtools::nuclearPed(children = c(\"S1\", \"S2\"))  # sample genotypes for a mixture of S1 + U1 + S2 # where U1 is an unrelated person  sample_contributor_genotypes(contributors = c(\"S1\",\"U1\",\"S2\"),                              freqs, pedigree = ped_sibs,                              loci = gf_configuration()$autosomal_markers) #> $S1 #>    Sample Name    Locus Allele1 Allele2 #> 1           S1  D3S1358      16      16 #> 2           S1      vWA      17      18 #> 3           S1  D16S539      11      11 #> 4           S1   CSF1PO      11      12 #> 5           S1     TPOX       8       8 #> 6           S1  D8S1179      11      13 #> 7           S1   D21S11      29      29 #> 8           S1   D18S51      14      18 #> 9           S1   D2S441      11    11.3 #> 10          S1  D19S433      14      14 #> 11          S1     TH01       7     9.3 #> 12          S1      FGA      22      22 #> 13          S1 D22S1045      11      15 #> 14          S1   D5S818      11      11 #> 15          S1  D13S317      10      12 #> 16          S1   D7S820       9      12 #> 17          S1     SE33    28.2    29.2 #> 18          S1 D10S1248      13      16 #> 19          S1  D1S1656      15      15 #> 20          S1  D12S391      19      22 #> 21          S1  D2S1338      17      20 #>  #> $U1 #>    Sample Name    Locus Allele1 Allele2 #> 1           U1  D3S1358      17      17 #> 2           U1      vWA      18      19 #> 3           U1  D16S539      11      12 #> 4           U1   CSF1PO      12      13 #> 5           U1     TPOX       8       8 #> 6           U1  D8S1179      12      13 #> 7           U1   D21S11      30      30 #> 8           U1   D18S51      12      12 #> 9           U1   D2S441      11      15 #> 10          U1  D19S433      14    15.2 #> 11          U1     TH01       6       6 #> 12          U1      FGA      22      25 #> 13          U1 D22S1045      14      16 #> 14          U1   D5S818      11      11 #> 15          U1  D13S317      12      14 #> 16          U1   D7S820      10      10 #> 17          U1     SE33      16      17 #> 18          U1 D10S1248      13      13 #> 19          U1  D1S1656      12      15 #> 20          U1  D12S391    19.3      22 #> 21          U1  D2S1338      25      25 #>  #> $S2 #>    Sample Name    Locus Allele1 Allele2 #> 1           S2  D3S1358      14      16 #> 2           S2      vWA      16      17 #> 3           S2  D16S539      11      12 #> 4           S2   CSF1PO      10      12 #> 5           S2     TPOX       8       8 #> 6           S2  D8S1179      15      16 #> 7           S2   D21S11      29    32.2 #> 8           S2   D18S51      13      18 #> 9           S2   D2S441      11      11 #> 10          S2  D19S433      13      14 #> 11          S2     TH01       7     9.3 #> 12          S2      FGA      22      23 #> 13          S2 D22S1045      11      16 #> 14          S2   D5S818      10      12 #> 15          S2  D13S317      12      13 #> 16          S2   D7S820       9      11 #> 17          S2     SE33      17      19 #> 18          S2 D10S1248      13      16 #> 19          S2  D1S1656      11      15 #> 20          S2  D12S391      22      22 #> 21          S2  D2S1338      19      24 #>   # now also include AMEL sample_contributor_genotypes(contributors = c(\"S1\",\"S2\", \"U1\"),                              freqs, pedigree = ped_sibs,                              loci = c(gf_configuration()$autosomal_markers, \"AMEL\")) #> $S1 #>    Sample Name    Locus Allele1 Allele2 #> 1           S1  D3S1358      18      18 #> 2           S1      vWA      15      17 #> 3           S1  D16S539      11      14 #> 4           S1   CSF1PO      10      12 #> 5           S1     TPOX       8       8 #> 6           S1  D8S1179      13      13 #> 7           S1   D21S11      30      31 #> 8           S1   D18S51      12      17 #> 9           S1   D2S441      11      14 #> 10          S1  D19S433      13      13 #> 11          S1     TH01       8       8 #> 12          S1      FGA      22      25 #> 13          S1 D22S1045      16      16 #> 14          S1   D5S818      11      13 #> 15          S1  D13S317      11      11 #> 16          S1   D7S820      10      11 #> 17          S1     SE33      19      19 #> 18          S1 D10S1248      15      16 #> 19          S1  D1S1656      12      15 #> 20          S1  D12S391      17      19 #> 21          S1  D2S1338      17      18 #> 22          S1     AMEL       X       Y #>  #> $S2 #>    Sample Name    Locus Allele1 Allele2 #> 1           S2  D3S1358      14      18 #> 2           S2      vWA      15      17 #> 3           S2  D16S539      12      14 #> 4           S2   CSF1PO      11      12 #> 5           S2     TPOX       8       8 #> 6           S2  D8S1179      13      13 #> 7           S2   D21S11      28      30 #> 8           S2   D18S51      10      14 #> 9           S2   D2S441      10      11 #> 10          S2  D19S433      13      14 #> 11          S2     TH01       8       9 #> 12          S2      FGA      22      23 #> 13          S2 D22S1045      15      16 #> 14          S2   D5S818      11      13 #> 15          S2  D13S317       8      11 #> 16          S2   D7S820      10      11 #> 17          S2     SE33      12      18 #> 18          S2 D10S1248      13      15 #> 19          S2  D1S1656      12      15 #> 20          S2  D12S391      17      19 #> 21          S2  D2S1338      17      18 #> 22          S2     AMEL       X       Y #>  #> $U1 #>    Sample Name    Locus Allele1 Allele2 #> 1           U1  D3S1358      16      17 #> 2           U1      vWA      15      19 #> 3           U1  D16S539      11      12 #> 4           U1   CSF1PO      12      12 #> 5           U1     TPOX       8       9 #> 6           U1  D8S1179      14      14 #> 7           U1   D21S11      29      31 #> 8           U1   D18S51      16      17 #> 9           U1   D2S441      11      11 #> 10          U1  D19S433      13    15.2 #> 11          U1     TH01       8     9.3 #> 12          U1      FGA      21      21 #> 13          U1 D22S1045      15      17 #> 14          U1   D5S818      13      13 #> 15          U1  D13S317      12      13 #> 16          U1   D7S820      11      12 #> 17          U1     SE33    25.2    27.2 #> 18          U1 D10S1248      13      14 #> 19          U1  D1S1656      15    18.3 #> 20          U1  D12S391      18      19 #> 21          U1  D2S1338      20      22 #> 22          U1     AMEL       X       X #>"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_drop_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample drop model(s) with parameters according to priors — sample_drop_model","title":"Sample drop model(s) with parameters according to priors — sample_drop_model","text":"Sample drop model(s) parameters according priors","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_drop_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample drop model(s) with parameters according to priors — sample_drop_model","text":"","code":"sample_drop_model(   number_of_contributors,   sampling_parameters,   drop_in_rate = 0,   model_settings )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_drop_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample drop model(s) with parameters according to priors — sample_drop_model","text":"number_of_contributors Integer sampling_parameters List. Needs contain: min_dropout_probability. Numeric length one. max_dropout_probability Numeric length one. drop_in_rate Numeric vector length one. Expected number drop-ins per locus. Default 0. model_settings List. See drop_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_drop_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample drop model(s) with parameters according to priors — sample_drop_model","text":"length(number_of_contributors)==1, single drop_model class pg_model. Otherwise, list .","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_drop_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample drop model(s) with parameters according to priors — sample_drop_model","text":"simulation studies involving many mixed DNA profiles, one often needs generate various samples different model parameters. function samples drop model parameters according prior distributions. dropout probability contributor sampled uniformly min_dropout_probability. max_dropout_probability.","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_drop_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample drop model(s) with parameters according to priors — sample_drop_model","text":"","code":"gf <- gf_configuration()  sampling_parameters <- list(min_dropout_probability. = 0., max_dropout_probability. = 0.5)  model <- sample_drop_model(number_of_contributors = 1,                            sampling_parameters = sampling_parameters,                            model_settings = list(locus_names = gf$autosomal_markers,                            size_regression = gf$size_regression))"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_gamma_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample gamma model(s) with parameters according to priors — sample_gamma_model","title":"Sample gamma model(s) with parameters according to priors — sample_gamma_model","text":"Sample gamma model(s) parameters according priors","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_gamma_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample gamma model(s) with parameters according to priors — sample_gamma_model","text":"","code":"sample_gamma_model(number_of_contributors, sampling_parameters, model_settings)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_gamma_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample gamma model(s) with parameters according to priors — sample_gamma_model","text":"number_of_contributors Integer sampling_parameters List. Needs contain: min_mu. Numeric length one. max_mu. Numeric length one. min_cv. Numeric length one. max_cv. Numeric length one. degradation_shape1. Numeric length one. degradation_shape2. Numeric length one. model_settings List. See gamma_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_gamma_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample gamma model(s) with parameters according to priors — sample_gamma_model","text":"length(number_of_contributors)==1, single gamma_model class pg_model. Otherwise, list .","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_gamma_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample gamma model(s) with parameters according to priors — sample_gamma_model","text":"simulation studies involving many mixed DNA profiles, one often needs generate various samples different model parameters. function samples gamma model parameters according prior distributions. mean peak height parameter mu sampled uniformly min_mu max_mu. Likewise, variability parameter cv sampled uniformly min_cv max_cv. degradation slope parameter beta sampled according Beta distribution parameters degradation_shape1 degradation_shape2.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_gamma_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample gamma model(s) with parameters according to priors — sample_gamma_model","text":"","code":"gf <- gf_configuration()  sampling_parameters <- list(min_mu = 50., max_mu = 5e3,                            min_cv = 0.05, max_cv = 0.35,                            degradation_shape1 = 10, degradation_shape2 = 1)  model_no_stutter <- sample_gamma_model(number_of_contributors = 2,                                       sampling_parameters = sampling_parameters,                                       model_settings = gf$gamma_settings_no_stutter)  model_no_stutter$parameters #> $model #> [1] \"gamma_model\" #>  #> $mixture_proportions #> [1] 0.6878678 0.3121322 #>  #> $mu #> [1] 2068.507 #>  #> $cv #> [1] 0.2785053 #>  #> $degradation_beta #> [1] 0.8856608 0.8856608 #>  #> $LSAE #>  D3S1358      vWA  D16S539   CSF1PO     TPOX     AMEL  D8S1179   D21S11  #>        1        1        1        1        1        1        1        1  #>   D18S51   D2S441  D19S433     TH01      FGA D22S1045   D5S818  D13S317  #>        1        1        1        1        1        1        1        1  #>   D7S820     SE33 D10S1248  D1S1656  D12S391  D2S1338  #>        1        1        1        1        1        1  #>"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_genotype.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample a genotype according to allele frequencies — sample_genotype","title":"Sample a genotype according to allele frequencies — sample_genotype","text":"Sample genotype according allele frequencies","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_genotype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample a genotype according to allele frequencies — sample_genotype","text":"","code":"sample_genotype(freqs, loci = names(freqs), label = \"U\")"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_genotype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample a genotype according to allele frequencies — sample_genotype","text":"freqs Allele frequencies (see read_allele_freqs) loci Character vector locus names (defaults names attribute freqs) label Sample name","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_genotype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample a genotype according to allele frequencies — sample_genotype","text":"DataFrame columns Sample Name, Locus, Allele1 Allele2.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_genotype.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample a genotype according to allele frequencies — sample_genotype","text":"genotype sampled randomly drawing two alleles allele frequencies locus.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_genotype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample a genotype according to allele frequencies — sample_genotype","text":"","code":"# below we read an allele freqs and sample a genotype filename <- system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                         package = \"simDNAmixtures\") freqs <- read_allele_freqs(filename) sample_genotype(freqs, loci = c(\"D3S1358\", \"vWA\")) #>   Sample Name   Locus Allele1 Allele2 #> 1           U D3S1358      16      17 #> 2           U     vWA      18      18"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample log normal model(s) with parameters according to priors — sample_log_normal_model","title":"Sample log normal model(s) with parameters according to priors — sample_log_normal_model","text":"Sample log normal model(s) parameters according priors","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample log normal model(s) with parameters according to priors — sample_log_normal_model","text":"","code":"sample_log_normal_model(   number_of_contributors,   sampling_parameters,   model_settings )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample log normal model(s) with parameters according to priors — sample_log_normal_model","text":"number_of_contributors Integer sampling_parameters List. Needs contain: min_template. Numeric length one. max_template. Numeric length one. degradation_shape. Numeric length one. degradation_scale. Numeric length one. model_settings List. See log_normal_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample log normal model(s) with parameters according to priors — sample_log_normal_model","text":"length(number_of_contributors)==1, single log_normal_model class pg_model. Otherwise, list .","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_model.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample log normal model(s) with parameters according to priors — sample_log_normal_model","text":"simulation studies involving many mixed DNA profiles, one often needs generate various samples different model parameters. function samples log normal model parameters according prior distributions. template parameter contributor sampled uniformly min_template max_template. degradation parameter contributor sampled gamma distribution parameters degradation_shape degradation_scale.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample log normal model(s) with parameters according to priors — sample_log_normal_model","text":"","code":"gf <- gf_configuration()  sampling_parameters <- list(min_template = 50., max_template = 1000.,                             degradation_shape = 2.5, degradation_scale = 1e-3)  model_no_stutter <- sample_log_normal_model(number_of_contributors = 1,                                             sampling_parameters = sampling_parameters,                                             model_settings = gf$log_normal_settings)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample log normal model parameters according to priors — sample_log_normal_parameters","title":"Sample log normal model parameters according to priors — sample_log_normal_parameters","text":"Sample log normal model parameters according priors","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample log normal model parameters according to priors — sample_log_normal_parameters","text":"","code":"sample_log_normal_parameters(   number_of_contributors,   sampling_parameters,   model_settings )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample log normal model parameters according to priors — sample_log_normal_parameters","text":"number_of_contributors Integer sampling_parameters List. Needs contain: min_template. Numeric length one. max_template. Numeric length one. degradation_shape. Numeric length one. degradation_scale. Numeric length one. model_settings List. See log_normal_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample log normal model parameters according to priors — sample_log_normal_parameters","text":"length(number_of_contributors)==1, single log_normal_model class pg_model. Otherwise, list .","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample log normal model parameters according to priors — sample_log_normal_parameters","text":"simulation studies involving many mixed DNA profiles, one often needs generate various samples different model parameters. function samples log normal model parameters according prior distributions. template parameter contributor sampled uniformly min_template max_template. degradation parameter contributor sampled gamma distribution parameters degradation_shape degradation_scale.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample log normal model parameters according to priors — sample_log_normal_parameters","text":"","code":"gf <- gf_configuration()  sampling_parameters <- list(min_template = 50., max_template = 1000.,                             degradation_shape = 2.5, degradation_scale = 1e-3)  parameters <- sample_log_normal_parameters(number_of_contributors = 1,                                             sampling_parameters = sampling_parameters,                                             model_settings = gf$log_normal_settings)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_stutter_variance.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample log normal stutter variance parameters according to priors — sample_log_normal_stutter_variance","title":"Sample log normal stutter variance parameters according to priors — sample_log_normal_stutter_variance","text":"Sample log normal stutter variance parameters according priors","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_stutter_variance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample log normal stutter variance parameters according to priors — sample_log_normal_stutter_variance","text":"","code":"sample_log_normal_stutter_variance(log_normal_stutter_variability)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_stutter_variance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample log normal stutter variance parameters according to priors — sample_log_normal_stutter_variance","text":"log_normal_stutter_variability List variability parameters. See gf_configuration example.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_stutter_variance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample log normal stutter variance parameters according to priors — sample_log_normal_stutter_variance","text":"Named numeric stutter variance parameter stutter types. Names k2 concatenated name stuter type. See example.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_log_normal_stutter_variance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample log normal stutter variance parameters according to priors — sample_log_normal_stutter_variance","text":"","code":"gf <- gf_configuration() log_normal_stutter_variability <- gf$log_normal_settings$stutter_variability k2 <- sample_log_normal_stutter_variance(log_normal_stutter_variability)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_many_pedigree_genotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample (many) genotypes for pedigree members according to allele frequencies by allele dropping and possibly taking linkage into account by simulating recombination. — sample_many_pedigree_genotypes","title":"Sample (many) genotypes for pedigree members according to allele frequencies by allele dropping and possibly taking linkage into account by simulating recombination. — sample_many_pedigree_genotypes","text":"Sample (many) genotypes pedigree members according allele frequencies allele dropping possibly taking linkage account simulating recombination.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_many_pedigree_genotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample (many) genotypes for pedigree members according to allele frequencies by allele dropping and possibly taking linkage into account by simulating recombination. — sample_many_pedigree_genotypes","text":"","code":"sample_many_pedigree_genotypes(   pedigree,   freqs,   loci = names(freqs),   unrelated_names = character(),   linkage_map,   number_of_replicates = 1L,   sex_locus_name = \"AMEL\",   return_transmission_vectors = FALSE )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_many_pedigree_genotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample (many) genotypes for pedigree members according to allele frequencies by allele dropping and possibly taking linkage into account by simulating recombination. — sample_many_pedigree_genotypes","text":"pedigree ped object freqs Allele frequencies (see read_allele_freqs) loci Character vector locus names (defaults names attribute freqs) unrelated_names Character vector names additional unrelated persons. Defaults length zero. linkage_map linkage map specifying cM distances loci. missing, loci assumed independent. number_of_replicates integer specifying number replicate genotype samples generate. Defaults 1. sex_locus_name Character vector, defaults \"AMEL\" return_transmission_vectors transmission vectors returned attribute? usually interest, default FALSE.","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_many_pedigree_genotypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample (many) genotypes for pedigree members according to allele frequencies by allele dropping and possibly taking linkage into account by simulating recombination. — sample_many_pedigree_genotypes","text":"","code":"# load allele frequencies freqs <- read_allele_freqs(system.file(\"extdata\",                             \"FBI_extended_Cauc_022024.csv\",                             package = \"simDNAmixtures\"))  # define a pedigree with two full siblings: S1 and S2 ped_fs <- pedtools::nuclearPed(children = c(\"S1\", \"S2\"))  # define two linked loci linkage_map <- data.frame(chromosome = c(12, 12),                           locus = c(\"vWA\", \"D12S391\"),                           position = c(15.15, 26.63))   # sample genotypes ignoring linkage sample_many_pedigree_genotypes(pedigree = ped_fs, freqs = freqs,                              loci = c(\"vWA\", \"D12S391\"),                             number_of_replicates = 10) #>          vWA  vWA(2) D12S391 D12S391(2) #> rep1_1   \"15\" \"16\"   \"18\"    \"18\"       #> rep1_2   \"17\" \"17\"   \"19\"    \"19\"       #> rep1_S1  \"16\" \"17\"   \"18\"    \"19\"       #> rep1_S2  \"16\" \"17\"   \"18\"    \"19\"       #> rep2_1   \"16\" \"16\"   \"19\"    \"21\"       #> rep2_2   \"14\" \"17\"   \"18\"    \"18\"       #> rep2_S1  \"16\" \"17\"   \"18\"    \"21\"       #> rep2_S2  \"14\" \"16\"   \"18\"    \"19\"       #> rep3_1   \"16\" \"17\"   \"22\"    \"23\"       #> rep3_2   \"16\" \"17\"   \"19\"    \"22\"       #> rep3_S1  \"16\" \"17\"   \"22\"    \"23\"       #> rep3_S2  \"16\" \"17\"   \"19\"    \"22\"       #> rep4_1   \"18\" \"19\"   \"18\"    \"20\"       #> rep4_2   \"15\" \"16\"   \"21\"    \"25\"       #> rep4_S1  \"16\" \"18\"   \"20\"    \"25\"       #> rep4_S2  \"15\" \"19\"   \"20\"    \"21\"       #> rep5_1   \"16\" \"17\"   \"16\"    \"18\"       #> rep5_2   \"16\" \"17\"   \"17\"    \"24\"       #> rep5_S1  \"16\" \"16\"   \"16\"    \"17\"       #> rep5_S2  \"16\" \"17\"   \"16\"    \"17\"       #> rep6_1   \"18\" \"19\"   \"20\"    \"23\"       #> rep6_2   \"15\" \"16\"   \"18.3\"  \"21\"       #> rep6_S1  \"15\" \"18\"   \"20\"    \"21\"       #> rep6_S2  \"15\" \"18\"   \"20\"    \"21\"       #> rep7_1   \"14\" \"18\"   \"18\"    \"18.3\"     #> rep7_2   \"16\" \"16\"   \"16\"    \"19\"       #> rep7_S1  \"16\" \"18\"   \"16\"    \"18.3\"     #> rep7_S2  \"16\" \"18\"   \"16\"    \"18\"       #> rep8_1   \"14\" \"18\"   \"15\"    \"20\"       #> rep8_2   \"15\" \"17\"   \"21\"    \"22\"       #> rep8_S1  \"15\" \"18\"   \"15\"    \"22\"       #> rep8_S2  \"15\" \"18\"   \"15\"    \"22\"       #> rep9_1   \"16\" \"18\"   \"19\"    \"23\"       #> rep9_2   \"16\" \"16\"   \"23\"    \"23\"       #> rep9_S1  \"16\" \"16\"   \"23\"    \"23\"       #> rep9_S2  \"16\" \"16\"   \"19\"    \"23\"       #> rep10_1  \"17\" \"17\"   \"18\"    \"21\"       #> rep10_2  \"13\" \"17\"   \"18\"    \"18\"       #> rep10_S1 \"17\" \"17\"   \"18\"    \"18\"       #> rep10_S2 \"13\" \"17\"   \"18\"    \"21\"        # sample genotypes taking linkage into acconut sample_many_pedigree_genotypes(pedigree = ped_fs, freqs = freqs,                             loci = c(\"vWA\", \"D12S391\"),                             linkage_map = linkage_map,                             number_of_replicates = 10) #>          vWA  vWA(2) D12S391 D12S391(2) #> rep1_1   \"17\" \"18\"   \"19\"    \"21\"       #> rep1_2   \"17\" \"19\"   \"19\"    \"20\"       #> rep1_S1  \"17\" \"19\"   \"19\"    \"21\"       #> rep1_S2  \"17\" \"18\"   \"19\"    \"20\"       #> rep2_1   \"15\" \"17\"   \"18\"    \"19\"       #> rep2_2   \"16\" \"19\"   \"23\"    \"24\"       #> rep2_S1  \"17\" \"19\"   \"19\"    \"23\"       #> rep2_S2  \"15\" \"16\"   \"18\"    \"24\"       #> rep3_1   \"16\" \"17\"   \"18\"    \"20\"       #> rep3_2   \"15\" \"17\"   \"21\"    \"24\"       #> rep3_S1  \"16\" \"17\"   \"18\"    \"21\"       #> rep3_S2  \"17\" \"17\"   \"20\"    \"21\"       #> rep4_1   \"16\" \"16\"   \"20\"    \"23\"       #> rep4_2   \"18\" \"19\"   \"20\"    \"21\"       #> rep4_S1  \"16\" \"19\"   \"20\"    \"20\"       #> rep4_S2  \"16\" \"18\"   \"21\"    \"23\"       #> rep5_1   \"14\" \"15\"   \"18\"    \"21\"       #> rep5_2   \"17\" \"18\"   \"21\"    \"23\"       #> rep5_S1  \"14\" \"18\"   \"18\"    \"23\"       #> rep5_S2  \"15\" \"17\"   \"21\"    \"21\"       #> rep6_1   \"16\" \"18\"   \"17\"    \"18\"       #> rep6_2   \"14\" \"16\"   \"16\"    \"22\"       #> rep6_S1  \"16\" \"18\"   \"16\"    \"18\"       #> rep6_S2  \"16\" \"18\"   \"16\"    \"18\"       #> rep7_1   \"16\" \"18\"   \"15\"    \"15\"       #> rep7_2   \"16\" \"18\"   \"18\"    \"23\"       #> rep7_S1  \"16\" \"18\"   \"15\"    \"18\"       #> rep7_S2  \"16\" \"18\"   \"15\"    \"23\"       #> rep8_1   \"16\" \"19\"   \"17\"    \"19\"       #> rep8_2   \"14\" \"18\"   \"19\"    \"22\"       #> rep8_S1  \"18\" \"19\"   \"19\"    \"22\"       #> rep8_S2  \"14\" \"19\"   \"19\"    \"19\"       #> rep9_1   \"15\" \"17\"   \"15\"    \"17.3\"     #> rep9_2   \"15\" \"17\"   \"17.3\"  \"22\"       #> rep9_S1  \"15\" \"15\"   \"17.3\"  \"22\"       #> rep9_S2  \"17\" \"17\"   \"17.3\"  \"17.3\"     #> rep10_1  \"16\" \"17\"   \"20\"    \"21\"       #> rep10_2  \"14\" \"17\"   \"21\"    \"22\"       #> rep10_S1 \"17\" \"17\"   \"20\"    \"21\"       #> rep10_S2 \"14\" \"16\"   \"20\"    \"22\""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixture_from_genotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample mixture profile with provided genotypes — sample_mixture_from_genotypes","title":"Sample mixture profile with provided genotypes — sample_mixture_from_genotypes","text":"Sample mixture profile provided genotypes","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixture_from_genotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample mixture profile with provided genotypes — sample_mixture_from_genotypes","text":"","code":"sample_mixture_from_genotypes(genotypes, model, sample_name = \"mixture\")"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixture_from_genotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample mixture profile with provided genotypes — sample_mixture_from_genotypes","text":"genotypes List contributor genotypes. See sample_contributor_genotypes. model pg_model object. sample_name Character. Defaults \"mixture\".","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixture_from_genotypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample mixture profile with provided genotypes — sample_mixture_from_genotypes","text":"DataFrame least SMASH columns (see SMASH_to_wide_table). Depending chosen pg_model (e.g. gamma_model log_normal_model), columns details simulation returned well.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixture_from_genotypes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample mixture profile with provided genotypes — sample_mixture_from_genotypes","text":"mixture profile sampled according provided pg_model (see gamma_model, log_normal_model genotypes (see sample_contributor_genotypes).","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixture_from_genotypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample mixture profile with provided genotypes — sample_mixture_from_genotypes","text":"","code":"# read allele frequencies and kit data freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                            package = \"simDNAmixtures\")) gf <- gf_configuration()  # define a pedigree of siblings S1 and S2 (and their parents) ped_sibs <- pedtools::nuclearPed(children = c(\"S1\", \"S2\"))  # sample genotypes for a mixture of S1 + U1 + S2 # where U1 is an unrelated person genotypes <- sample_contributor_genotypes(contributors = c(\"S1\",\"U1\",\"S2\"), freqs, pedigree = ped_sibs, loci = gf$autosomal_markers)  # define a gamma model for peak heights gamma_model <- gamma_model(mixture_proportions = c(0.5, 0.3, 0.2), mu = 1000.,                     cv = 0.1, model_settings = gf$gamma_settings_no_stutter)  # sample mixture from genotypes mix <- sample_mixture_from_genotypes(genotypes, gamma_model)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample mixtures with random genotypes and random parameters according to priors — sample_mixtures","title":"Sample mixtures with random genotypes and random parameters according to priors — sample_mixtures","text":"Sample mixtures random genotypes random parameters according priors","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample mixtures with random genotypes and random parameters according to priors — sample_mixtures","text":"","code":"sample_mixtures(   n,   contributors,   freqs,   linkage_map,   sampling_parameters,   model_settings,   sample_model,   pedigree,   results_directory,   seed,   number_of_replicates = 1L,   write_non_contributors = FALSE,   tag = \"simulation\",   silent = FALSE )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample mixtures with random genotypes and random parameters according to priors — sample_mixtures","text":"n Integer. Number samples. contributors Character vector unique names contributors. Valid names \"U1\", \"U2\", ... unrelated contributors names pedigree members related contributors. freqs Allele frequencies (see read_allele_freqs) linkage_map (optional) linkage map specifying recombination fractions loci. missing, loci assumed independent. See also sample_many_pedigree_genotypes. sampling_parameters List. Passed sample_model function. model_settings List. Passed sample_model function. sample_model Function sample_log_normal_model. pedigree (optionally) ped object. Contributors can named pedigree members. results_directory (optionally) Character path directory results written disk. seed (optionally) Integer seed value can used get reproducible runs. results written disk, 'Run details.txt' file contain seed can used reproducing result. number_of_replicates Integer. Number replicate simulations sample. write_non_contributors Logical. TRUE, sampled genotypes non-contributing pedigree members also written disk. Defaults FALSE. tag Character. Used sub directory name results_directory provided. silent Logical. TRUE, message printed output () written disk.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample mixtures with random genotypes and random parameters according to priors — sample_mixtures","text":"results_directory provided, function side effect writing results disk. Return value list simulation results: call matched call smash DataFrame samples SMASH format (see SMASH_to_wide_table) samples Detailed results sample parameter_summary DataFrame parameters sample","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample mixtures with random genotypes and random parameters according to priors — sample_mixtures","text":"","code":"freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                            package = \"simDNAmixtures\")) gf <- gf_configuration()  sampling_parameters <- list(min_mu = 50., max_mu = 5e3,                            min_cv = 0.05, max_cv = 0.35,                            degradation_shape1 = 10, degradation_shape2 = 1)  mixtures <- sample_mixtures(n = 2, contributors = c(\"U1\", \"U2\"), freqs = freqs,                             sampling_parameters = sampling_parameters,                             model_settings = gf$gamma_settings_no_stutter,                             sample_model = sample_gamma_model)  # sample a mixture of two siblings taking into account  linkage_map <- data.frame(chromosome = c(\"12\",\"12\"),                           locus = c(\"vWA\", \"D12391\"),                           position = c(16.56662766, 29.48590551))  ped_sibs <- pedtools::nuclearPed(children = c(\"Sib1\", \"Sib2\"))  sibs_mix <- sample_mixtures(n = 1, contributors = c(\"Sib1\", \"Sib2\"),                             freqs = freqs,                             linkage_map = linkage_map,                             pedigree = ped_sibs,                             sampling_parameters = sampling_parameters,                             model_settings = gf$gamma_settings_no_stutter,                             sample_model = sample_gamma_model)  # an example using the semi-continuous drop model  drop_model_sampling_parameters <- list(min_dropout_probability. = 0.,                                        max_dropout_probability. = 0.5)  drop_model_settings <- list(locus_names = gf$autosomal_markers,                             size_regression = gf$size_regression)  mixtures <- sample_mixtures(n = 2, contributors = c(\"U1\", \"U2\"), freqs = freqs,                             sampling_parameters = drop_model_sampling_parameters,                             model_settings = drop_model_settings,                             sample_model = sample_drop_model)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_fixed_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample mixtures with known genotypes and fixed parameters — sample_mixtures_fixed_parameters","title":"Sample mixtures with known genotypes and fixed parameters — sample_mixtures_fixed_parameters","text":"Sample mixtures known genotypes fixed parameters","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_fixed_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample mixtures with known genotypes and fixed parameters — sample_mixtures_fixed_parameters","text":"","code":"sample_mixtures_fixed_parameters(   genotypes,   parameter_summary,   model_settings,   results_directory,   seed,   tag = \"simulation\",   silent = FALSE )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_fixed_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample mixtures with known genotypes and fixed parameters — sample_mixtures_fixed_parameters","text":"genotypes List contributor genotypes. See sample_contributor_genotypes. parameter_summary DataFrame parameters sample. model_settings List. Passed sample_model function. results_directory (optionally) Character path directory results written disk. seed (optionally) Integer seed value can used get reproducible runs. results written disk, 'Run details.txt' file contain seed can used reproducing result. tag Character. Used sub directory name results_directory provided. silent Logical. TRUE, message printed output () written disk.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_fixed_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample mixtures with known genotypes and fixed parameters — sample_mixtures_fixed_parameters","text":"results_directory provided, function side effect writing results disk. Return value list simulation results: call matched call smash DataFrame samples SMASH format (see SMASH_to_wide_table) samples Detailed results sample parameter_summary DataFrame parameters sample","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_fixed_parameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample mixtures with known genotypes and fixed parameters — sample_mixtures_fixed_parameters","text":"","code":"# simulate autosomal samples with fixed parameters (from csv) and refs (from csv) parameter_summary <- utils::read.csv(system.file( \"extdata\",\"Example_2p_Parameter_Summary.csv\", package = \"simDNAmixtures\"))  gf <- gf_configuration()  filename_refs <- system.file(\"extdata\",\"Example_References_DB.csv\",                             package = \"simDNAmixtures\") db_refs <- utils::read.csv(filename_refs, check.names = FALSE)  genotypes <- simDNAmixtures:::.wide_references_to_allele_tables(db_refs)  samples <- sample_mixtures_fixed_parameters(genotypes = genotypes,                                            parameter_summary = parameter_summary,                                            model_settings = gf$log_normal_bwfw_settings,                                            seed = 1)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_from_genotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample mixtures with known genotypes and random parameters according to priors — sample_mixtures_from_genotypes","title":"Sample mixtures with known genotypes and random parameters according to priors — sample_mixtures_from_genotypes","text":"Sample mixtures known genotypes random parameters according priors","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_from_genotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample mixtures with known genotypes and random parameters according to priors — sample_mixtures_from_genotypes","text":"","code":"sample_mixtures_from_genotypes(   n,   genotypes,   sampling_parameters,   model_settings,   sample_model,   results_directory,   seed,   number_of_replicates = 1L,   tag = \"simulation\",   silent = FALSE )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_from_genotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample mixtures with known genotypes and random parameters according to priors — sample_mixtures_from_genotypes","text":"n Integer. Number samples. genotypes List contributor genotypes. See sample_contributor_genotypes. sampling_parameters List. Passed sample_model function. model_settings List. Passed sample_model function. sample_model Function sample_log_normal_model. results_directory (optionally) Character path directory results written disk. seed (optionally) Integer seed value can used get reproducible runs. results written disk, 'Run details.txt' file contain seed can used reproducing result. number_of_replicates Integer. Number replicate simulations sample. tag Character. Used sub directory name results_directory provided. silent Logical. TRUE, message printed output () written disk.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_from_genotypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample mixtures with known genotypes and random parameters according to priors — sample_mixtures_from_genotypes","text":"results_directory provided, function side effect writing results disk. Return value list simulation results: call matched call smash DataFrame samples SMASH format (see SMASH_to_wide_table) samples Detailed results sample parameter_summary DataFrame parameters sample","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_mixtures_from_genotypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample mixtures with known genotypes and random parameters according to priors — sample_mixtures_from_genotypes","text":"","code":"# define two known GlobalFiler genotypes K1 <- data.frame(   `Sample Name` = \"K1\",   Locus = c(\"D3S1358\", \"vWA\", \"D16S539\", \"CSF1PO\", \"TPOX\", \"D8S1179\",             \"D21S11\", \"D18S51\", \"D2S441\", \"D19S433\", \"TH01\", \"FGA\",             \"D22S1045\", \"D5S818\", \"D13S317\", \"D7S820\", \"SE33\",             \"D10S1248\", \"D1S1656\", \"D12S391\", \"D2S1338\"),   Allele1 = c(\"14\", \"15\", \"11\", \"11\", \"8\",               \"11\", \"28\", \"14\", \"11\", \"14\", \"9.3\",               \"21\", \"15\", \"9\", \"9\", \"10\", \"14\",               \"14\", \"12\", \"21\", \"20\"),   Allele2 = c(\"16\", \"18\", \"13\", \"11\", \"11\",               \"12\", \"30\", \"16\", \"12\", \"14\", \"9.3\",               \"24\", \"16\", \"11\", \"12\", \"10\", \"18\",               \"14\", \"15\", \"22\", \"24\"), check.names = FALSE )  K2 <- data.frame(   `Sample Name` = \"K2\",   Locus = c(\"D3S1358\", \"vWA\", \"D16S539\", \"CSF1PO\", \"TPOX\", \"D8S1179\",             \"D21S11\", \"D18S51\", \"D2S441\", \"D19S433\", \"TH01\", \"FGA\",             \"D22S1045\", \"D5S818\", \"D13S317\", \"D7S820\", \"SE33\",             \"D10S1248\", \"D1S1656\", \"D12S391\", \"D2S1338\"),   Allele1 = c(\"16\", \"16\", \"10\", \"13\", \"8\",               \"11\", \"27\", \"17\", \"10\", \"13\", \"6\",               \"23\", \"16\", \"11\", \"11\", \"9\", \"22.2\",               \"14\", \"12\", \"22\", \"21\"),   Allele2 = c(\"16\", \"17\", \"12\", \"14\", \"8\",               \"13\", \"30\", \"18\", \"11\", \"14\", \"6\",               \"25\", \"17\", \"11\", \"11\", \"12\", \"28.2\",               \"15\", \"14\", \"22\", \"23\"), check.names = FALSE )  # first sample three replicates of a low-level profile of K1 only gf <- gf_configuration()  sampling_parameters <- list(min_template = 75., max_template = 75,                             degradation_shape = 2.5, degradation_scale = 1e-3)  single_source_results <- sample_mixtures_from_genotypes(n = 1,                 genotypes = list(K1), sampling_parameters = sampling_parameters,                 number_of_replicates = 3, sample_model = sample_log_normal_model,                 model_settings = gf$log_normal_bwfw_settings)  # now sample two mixtures of K1 and K2 with two replicates each  mix_results <- sample_mixtures_from_genotypes(n = 2,                 genotypes = list(K1, K2), sampling_parameters = sampling_parameters,                 number_of_replicates = 3, sample_model = sample_log_normal_model,                 model_settings = gf$log_normal_bwfw_settings)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_offspring.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample offspring from two parental genotypes — sample_offspring","title":"Sample offspring from two parental genotypes — sample_offspring","text":"Sample offspring two parental genotypes","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_offspring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample offspring from two parental genotypes — sample_offspring","text":"","code":"sample_offspring(father, mother, label = \"Child\")"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_offspring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample offspring from two parental genotypes — sample_offspring","text":"father DataFrame (see sample_genotype) mother DataFrame (see sample_genotype) label SampleName child (character)","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_offspring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample offspring from two parental genotypes — sample_offspring","text":"DataFrame (see sample_genotype)","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_offspring.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample offspring from two parental genotypes — sample_offspring","text":"genotype sampled according Mendelian inheritance. , one two alleles parent passed offspring.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_offspring.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample offspring from two parental genotypes — sample_offspring","text":"","code":"# below we read an allele freqs and sample a genotype filename <- system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                         package = \"simDNAmixtures\") freqs <- read_allele_freqs(filename)  # sample parents father <- sample_genotype(freqs, loci = c(\"D3S1358\", \"vWA\")) mother <- sample_genotype(freqs, loci = c(\"D3S1358\", \"vWA\"))  # sample child child <- sample_offspring(father, mother)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_pedigree_genotypes.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample genotypes for pedigree according to allele frequencies by allele dropping. — sample_pedigree_genotypes","title":"Sample genotypes for pedigree according to allele frequencies by allele dropping. — sample_pedigree_genotypes","text":"Sample genotypes pedigree according allele frequencies allele dropping.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_pedigree_genotypes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample genotypes for pedigree according to allele frequencies by allele dropping. — sample_pedigree_genotypes","text":"","code":"sample_pedigree_genotypes(pedigree, freqs, loci = names(freqs))"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_pedigree_genotypes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample genotypes for pedigree according to allele frequencies by allele dropping. — sample_pedigree_genotypes","text":"pedigree ped object freqs Allele frequencies (see read_allele_freqs) loci Character vector locus names (defaults names attribute freqs)","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_pedigree_genotypes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample genotypes for pedigree according to allele frequencies by allele dropping. — sample_pedigree_genotypes","text":"List DataFrames genotypes pedigree member. See sample_genotype DataFrame format.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_pedigree_genotypes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample genotypes for pedigree according to allele frequencies by allele dropping. — sample_pedigree_genotypes","text":"founder, genotype sampled randomly drawing two alleles according allele frequencies. Alleles rest pedigree obtained allele dropping: sample_offspring invoked non-founder.","code":""},{"path":[]},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/sample_pedigree_genotypes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample genotypes for pedigree according to allele frequencies by allele dropping. — sample_pedigree_genotypes","text":"","code":"freqs <- read_allele_freqs(system.file(\"extdata\",\"FBI_extended_Cauc_022024.csv\",                            package = \"simDNAmixtures\")) gf <- gf_configuration()  ped_sibs <- pedtools::nuclearPed(children = c(\"S1\", \"S2\"))  sibs_genotypes <- sample_pedigree_genotypes(ped = ped_sibs, freqs = freqs, loci = gf$autosomal_markers)"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/stutter_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Defines a stutter type to be used in the allele specific stutter model. — stutter_type","title":"Defines a stutter type to be used in the allele specific stutter model. — stutter_type","text":"Defines stutter type used allele specific stutter model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/stutter_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defines a stutter type to be used in the allele specific stutter model. — stutter_type","text":"","code":"stutter_type(   name,   delta,   applies_to_all_loci = TRUE,   stutter_regression,   stutter_exceptions,   applies_to_loci,   repeat_length_by_marker )"},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/stutter_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Defines a stutter type to be used in the allele specific stutter model. — stutter_type","text":"name Character. Name stutter, e.g. \"BackStutter\" delta Numeric. length one, repeat units gained (lost negative). length two, second element number base pairs gained (lost). applies_to_all_loci Logical. Defaults TRUE. stutter_regression Function. See read_stutter_regression. stutter_exceptions Optionally list. See read_stutter_exceptions. applies_to_loci Optionally character vector locus names stutter type applies. repeat_length_by_marker Optionally named integer vector repeat lengths marker. needed delta length two.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/stutter_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Defines a stutter type to be used in the allele specific stutter model. — stutter_type","text":"Object class stutter_type passed allele_specific_stutter_model.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/stutter_type.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Defines a stutter type to be used in the allele specific stutter model. — stutter_type","text":"pg_model constructed (see log_normal_model), stutter model can optionally applied.","code":""},{"path":"https://mkruijver.github.io/simDNAmixtures/reference/stutter_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Defines a stutter type to be used in the allele specific stutter model. — stutter_type","text":"","code":"filename_bs_exceptions <- system.file(\"extdata\", \"GlobalFiler_Stutter_Exceptions_3500.csv\",package = \"simDNAmixtures\") bs_exceptions <- read_stutter_exceptions(filename_bs_exceptions)  filename_bs_regression <- system.file(\"extdata\", \"GlobalFiler_Stutter_3500.txt\",package = \"simDNAmixtures\") bs_regression <- read_stutter_regression(filename_bs_regression)  backstutter <- stutter_type(name = \"BackStutter\", delta = -1,                             stutter_regression = bs_regression,                             stutter_exceptions = bs_exceptions)"}]
